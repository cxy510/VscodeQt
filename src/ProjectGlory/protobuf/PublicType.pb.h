// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicType.proto

#ifndef PROTOBUF_PublicType_2eproto__INCLUDED
#define PROTOBUF_PublicType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace SOMS {
class AllProjectData;
class AllProjectDataDefaultTypeInternal;
extern AllProjectDataDefaultTypeInternal _AllProjectData_default_instance_;
class DispatcherList;
class DispatcherListDefaultTypeInternal;
extern DispatcherListDefaultTypeInternal _DispatcherList_default_instance_;
class GroupMsg;
class GroupMsgDefaultTypeInternal;
extern GroupMsgDefaultTypeInternal _GroupMsg_default_instance_;
class ProjectItem;
class ProjectItemDefaultTypeInternal;
extern ProjectItemDefaultTypeInternal _ProjectItem_default_instance_;
class ProjectMsg;
class ProjectMsgDefaultTypeInternal;
extern ProjectMsgDefaultTypeInternal _ProjectMsg_default_instance_;
class RcvProgressMsg;
class RcvProgressMsgDefaultTypeInternal;
extern RcvProgressMsgDefaultTypeInternal _RcvProgressMsg_default_instance_;
class TrackMsg;
class TrackMsgDefaultTypeInternal;
extern TrackMsgDefaultTypeInternal _TrackMsg_default_instance_;
class TrainList;
class TrainListDefaultTypeInternal;
extern TrainListDefaultTypeInternal _TrainList_default_instance_;
}  // namespace SOMS

namespace SOMS {

namespace protobuf_PublicType_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PublicType_2eproto

enum RegisterStatue {
  kUnknowRegister = 0,
  kSuccessRegister = 1,
  kWrongRegister = 2,
  RegisterStatue_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegisterStatue_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegisterStatue_IsValid(int value);
const RegisterStatue RegisterStatue_MIN = kUnknowRegister;
const RegisterStatue RegisterStatue_MAX = kWrongRegister;
const int RegisterStatue_ARRAYSIZE = RegisterStatue_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterStatue_descriptor();
inline const ::std::string& RegisterStatue_Name(RegisterStatue value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterStatue_descriptor(), value);
}
inline bool RegisterStatue_Parse(
    const ::std::string& name, RegisterStatue* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterStatue>(
    RegisterStatue_descriptor(), name, value);
}
enum LoginResult {
  kUnknowLogin = 0,
  kSuccessLogin = 1,
  kPasswordWrongLogin = 2,
  kNoUserLogin = 3,
  kOverTimeLogin = 4,
  LoginResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginResult_IsValid(int value);
const LoginResult LoginResult_MIN = kUnknowLogin;
const LoginResult LoginResult_MAX = kOverTimeLogin;
const int LoginResult_ARRAYSIZE = LoginResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginResult_descriptor();
inline const ::std::string& LoginResult_Name(LoginResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginResult_descriptor(), value);
}
inline bool LoginResult_Parse(
    const ::std::string& name, LoginResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginResult>(
    LoginResult_descriptor(), name, value);
}
enum FileType {
  kUnknowFileType = 0,
  kDbFile = 1,
  kSoftware = 2,
  FileType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FileType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FileType_IsValid(int value);
const FileType FileType_MIN = kUnknowFileType;
const FileType FileType_MAX = kSoftware;
const int FileType_ARRAYSIZE = FileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileType_descriptor();
inline const ::std::string& FileType_Name(FileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileType_descriptor(), value);
}
inline bool FileType_Parse(
    const ::std::string& name, FileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileType>(
    FileType_descriptor(), name, value);
}
enum Handle {
  kUnknowHandle = 0,
  kAdd = 1,
  kReduce = 2,
  kTurnSouth = 3,
  kTurnNorth = 4,
  kStart = 5,
  Handle_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Handle_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Handle_IsValid(int value);
const Handle Handle_MIN = kUnknowHandle;
const Handle Handle_MAX = kStart;
const int Handle_ARRAYSIZE = Handle_MAX + 1;

const ::google::protobuf::EnumDescriptor* Handle_descriptor();
inline const ::std::string& Handle_Name(Handle value) {
  return ::google::protobuf::internal::NameOfEnum(
    Handle_descriptor(), value);
}
inline bool Handle_Parse(
    const ::std::string& name, Handle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Handle>(
    Handle_descriptor(), name, value);
}
enum State {
  kUnknowStatue = 0,
  kRunning = 1,
  kFinish = 2,
  kNotBegin = 3,
  kModify = 4,
  kExpired = 5,
  State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool State_IsValid(int value);
const State State_MIN = kUnknowStatue;
const State State_MAX = kExpired;
const int State_ARRAYSIZE = State_MAX + 1;

const ::google::protobuf::EnumDescriptor* State_descriptor();
inline const ::std::string& State_Name(State value) {
  return ::google::protobuf::internal::NameOfEnum(
    State_descriptor(), value);
}
inline bool State_Parse(
    const ::std::string& name, State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<State>(
    State_descriptor(), name, value);
}
enum FeasibleLevel {
  kUnknowFeasible = 0,
  Feasible_low = 1,
  Feasible_mid = 2,
  Feasible_high = 3,
  FeasibleLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FeasibleLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FeasibleLevel_IsValid(int value);
const FeasibleLevel FeasibleLevel_MIN = kUnknowFeasible;
const FeasibleLevel FeasibleLevel_MAX = Feasible_high;
const int FeasibleLevel_ARRAYSIZE = FeasibleLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* FeasibleLevel_descriptor();
inline const ::std::string& FeasibleLevel_Name(FeasibleLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    FeasibleLevel_descriptor(), value);
}
inline bool FeasibleLevel_Parse(
    const ::std::string& name, FeasibleLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeasibleLevel>(
    FeasibleLevel_descriptor(), name, value);
}
enum ProgressItem {
  kUnknowProgress = 0,
  kDispatcherReceve = 1,
  kDispatcherConfirm = 2,
  kDriverReceve = 3,
  kDriverConfirm = 4,
  kWatcherReceve = 5,
  kWatcherConfirm = 6,
  kWatcherApplyRoute = 7,
  ProgressItem_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProgressItem_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProgressItem_IsValid(int value);
const ProgressItem ProgressItem_MIN = kUnknowProgress;
const ProgressItem ProgressItem_MAX = kWatcherApplyRoute;
const int ProgressItem_ARRAYSIZE = ProgressItem_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProgressItem_descriptor();
inline const ::std::string& ProgressItem_Name(ProgressItem value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProgressItem_descriptor(), value);
}
inline bool ProgressItem_Parse(
    const ::std::string& name, ProgressItem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProgressItem>(
    ProgressItem_descriptor(), name, value);
}
enum ProgressResult {
  kUnknowProgressResult = 0,
  kSuccess = 1,
  kFail = 2,
  ProgressResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProgressResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProgressResult_IsValid(int value);
const ProgressResult ProgressResult_MIN = kUnknowProgressResult;
const ProgressResult ProgressResult_MAX = kFail;
const int ProgressResult_ARRAYSIZE = ProgressResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProgressResult_descriptor();
inline const ::std::string& ProgressResult_Name(ProgressResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProgressResult_descriptor(), value);
}
inline bool ProgressResult_Parse(
    const ::std::string& name, ProgressResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProgressResult>(
    ProgressResult_descriptor(), name, value);
}
enum ReceiveStatus {
  kUnknown = 0,
  kReceive = 1,
  kConfirm = 2,
  kWrong = 3,
  ReceiveStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReceiveStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReceiveStatus_IsValid(int value);
const ReceiveStatus ReceiveStatus_MIN = kUnknown;
const ReceiveStatus ReceiveStatus_MAX = kWrong;
const int ReceiveStatus_ARRAYSIZE = ReceiveStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReceiveStatus_descriptor();
inline const ::std::string& ReceiveStatus_Name(ReceiveStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReceiveStatus_descriptor(), value);
}
inline bool ReceiveStatus_Parse(
    const ::std::string& name, ReceiveStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReceiveStatus>(
    ReceiveStatus_descriptor(), name, value);
}
// ===================================================================

class ProjectItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.ProjectItem) */ {
 public:
  ProjectItem();
  virtual ~ProjectItem();

  ProjectItem(const ProjectItem& from);

  inline ProjectItem& operator=(const ProjectItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectItem& default_instance();

  static inline const ProjectItem* internal_default_instance() {
    return reinterpret_cast<const ProjectItem*>(
               &_ProjectItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ProjectItem* other);

  // implements Message ----------------------------------------------

  inline ProjectItem* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjectItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjectItem& from);
  void MergeFrom(const ProjectItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjectItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string track_name = 2;
  void clear_track_name();
  static const int kTrackNameFieldNumber = 2;
  const ::std::string& track_name() const;
  void set_track_name(const ::std::string& value);
  #if LANG_CXX11
  void set_track_name(::std::string&& value);
  #endif
  void set_track_name(const char* value);
  void set_track_name(const char* value, size_t size);
  ::std::string* mutable_track_name();
  ::std::string* release_track_name();
  void set_allocated_track_name(::std::string* track_name);

  // string comment = 8;
  void clear_comment();
  static const int kCommentFieldNumber = 8;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // string front_end = 9;
  void clear_front_end();
  static const int kFrontEndFieldNumber = 9;
  const ::std::string& front_end() const;
  void set_front_end(const ::std::string& value);
  #if LANG_CXX11
  void set_front_end(::std::string&& value);
  #endif
  void set_front_end(const char* value);
  void set_front_end(const char* value, size_t size);
  ::std::string* mutable_front_end();
  ::std::string* release_front_end();
  void set_allocated_front_end(::std::string* front_end);

  // uint32 order_num = 1;
  void clear_order_num();
  static const int kOrderNumFieldNumber = 1;
  ::google::protobuf::uint32 order_num() const;
  void set_order_num(::google::protobuf::uint32 value);

  // .SOMS.Handle handle = 4;
  void clear_handle();
  static const int kHandleFieldNumber = 4;
  ::SOMS::Handle handle() const;
  void set_handle(::SOMS::Handle value);

  // uint64 track_id = 3;
  void clear_track_id();
  static const int kTrackIdFieldNumber = 3;
  ::google::protobuf::uint64 track_id() const;
  void set_track_id(::google::protobuf::uint64 value);

  // uint32 train_num = 5;
  void clear_train_num();
  static const int kTrainNumFieldNumber = 5;
  ::google::protobuf::uint32 train_num() const;
  void set_train_num(::google::protobuf::uint32 value);

  // .SOMS.State state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::SOMS::State state() const;
  void set_state(::SOMS::State value);

  // uint32 time = 7;
  void clear_time();
  static const int kTimeFieldNumber = 7;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SOMS.ProjectItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr track_name_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::internal::ArenaStringPtr front_end_;
  ::google::protobuf::uint32 order_num_;
  int handle_;
  ::google::protobuf::uint64 track_id_;
  ::google::protobuf::uint32 train_num_;
  int state_;
  ::google::protobuf::uint32 time_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProjectMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.ProjectMsg) */ {
 public:
  ProjectMsg();
  virtual ~ProjectMsg();

  ProjectMsg(const ProjectMsg& from);

  inline ProjectMsg& operator=(const ProjectMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectMsg& default_instance();

  static inline const ProjectMsg* internal_default_instance() {
    return reinterpret_cast<const ProjectMsg*>(
               &_ProjectMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ProjectMsg* other);

  // implements Message ----------------------------------------------

  inline ProjectMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ProjectMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProjectMsg& from);
  void MergeFrom(const ProjectMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProjectMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SOMS.ProjectItem project_item = 2;
  int project_item_size() const;
  void clear_project_item();
  static const int kProjectItemFieldNumber = 2;
  const ::SOMS::ProjectItem& project_item(int index) const;
  ::SOMS::ProjectItem* mutable_project_item(int index);
  ::SOMS::ProjectItem* add_project_item();
  ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >*
      mutable_project_item();
  const ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >&
      project_item() const;

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // string dispatcher_id = 6;
  void clear_dispatcher_id();
  static const int kDispatcherIdFieldNumber = 6;
  const ::std::string& dispatcher_id() const;
  void set_dispatcher_id(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatcher_id(::std::string&& value);
  #endif
  void set_dispatcher_id(const char* value);
  void set_dispatcher_id(const char* value, size_t size);
  ::std::string* mutable_dispatcher_id();
  ::std::string* release_dispatcher_id();
  void set_allocated_dispatcher_id(::std::string* dispatcher_id);

  // string dispatcher_name = 8;
  void clear_dispatcher_name();
  static const int kDispatcherNameFieldNumber = 8;
  const ::std::string& dispatcher_name() const;
  void set_dispatcher_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatcher_name(::std::string&& value);
  #endif
  void set_dispatcher_name(const char* value);
  void set_dispatcher_name(const char* value, size_t size);
  ::std::string* mutable_dispatcher_name();
  ::std::string* release_dispatcher_name();
  void set_allocated_dispatcher_name(::std::string* dispatcher_name);

  // string train_name = 9;
  void clear_train_name();
  static const int kTrainNameFieldNumber = 9;
  const ::std::string& train_name() const;
  void set_train_name(const ::std::string& value);
  #if LANG_CXX11
  void set_train_name(::std::string&& value);
  #endif
  void set_train_name(const char* value);
  void set_train_name(const char* value, size_t size);
  ::std::string* mutable_train_name();
  ::std::string* release_train_name();
  void set_allocated_train_name(::std::string* train_name);

  // string project_name = 10;
  void clear_project_name();
  static const int kProjectNameFieldNumber = 10;
  const ::std::string& project_name() const;
  void set_project_name(const ::std::string& value);
  #if LANG_CXX11
  void set_project_name(::std::string&& value);
  #endif
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  ::std::string* mutable_project_name();
  ::std::string* release_project_name();
  void set_allocated_project_name(::std::string* project_name);

  // string parent_project_id = 11;
  void clear_parent_project_id();
  static const int kParentProjectIdFieldNumber = 11;
  const ::std::string& parent_project_id() const;
  void set_parent_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_project_id(::std::string&& value);
  #endif
  void set_parent_project_id(const char* value);
  void set_parent_project_id(const char* value, size_t size);
  ::std::string* mutable_parent_project_id();
  ::std::string* release_parent_project_id();
  void set_allocated_parent_project_id(::std::string* parent_project_id);

  // string project_content = 12;
  void clear_project_content();
  static const int kProjectContentFieldNumber = 12;
  const ::std::string& project_content() const;
  void set_project_content(const ::std::string& value);
  #if LANG_CXX11
  void set_project_content(::std::string&& value);
  #endif
  void set_project_content(const char* value);
  void set_project_content(const char* value, size_t size);
  ::std::string* mutable_project_content();
  ::std::string* release_project_content();
  void set_allocated_project_content(::std::string* project_content);

  // string swticher = 14;
  void clear_swticher();
  static const int kSwticherFieldNumber = 14;
  const ::std::string& swticher() const;
  void set_swticher(const ::std::string& value);
  #if LANG_CXX11
  void set_swticher(::std::string&& value);
  #endif
  void set_swticher(const char* value);
  void set_swticher(const char* value, size_t size);
  ::std::string* mutable_swticher();
  ::std::string* release_swticher();
  void set_allocated_swticher(::std::string* swticher);

  // .SOMS.GroupMsg group_msg = 13;
  bool has_group_msg() const;
  void clear_group_msg();
  static const int kGroupMsgFieldNumber = 13;
  const ::SOMS::GroupMsg& group_msg() const;
  ::SOMS::GroupMsg* mutable_group_msg();
  ::SOMS::GroupMsg* release_group_msg();
  void set_allocated_group_msg(::SOMS::GroupMsg* group_msg);

  // uint64 train_id = 3;
  void clear_train_id();
  static const int kTrainIdFieldNumber = 3;
  ::google::protobuf::uint64 train_id() const;
  void set_train_id(::google::protobuf::uint64 value);

  // uint32 begin_time = 4;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 4;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // uint32 end_time = 5;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 tlj_station_num = 7;
  void clear_tlj_station_num();
  static const int kTljStationNumFieldNumber = 7;
  ::google::protobuf::uint32 tlj_station_num() const;
  void set_tlj_station_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SOMS.ProjectMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem > project_item_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr dispatcher_id_;
  ::google::protobuf::internal::ArenaStringPtr dispatcher_name_;
  ::google::protobuf::internal::ArenaStringPtr train_name_;
  ::google::protobuf::internal::ArenaStringPtr project_name_;
  ::google::protobuf::internal::ArenaStringPtr parent_project_id_;
  ::google::protobuf::internal::ArenaStringPtr project_content_;
  ::google::protobuf::internal::ArenaStringPtr swticher_;
  ::SOMS::GroupMsg* group_msg_;
  ::google::protobuf::uint64 train_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 tlj_station_num_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcvProgressMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.RcvProgressMsg) */ {
 public:
  RcvProgressMsg();
  virtual ~RcvProgressMsg();

  RcvProgressMsg(const RcvProgressMsg& from);

  inline RcvProgressMsg& operator=(const RcvProgressMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcvProgressMsg& default_instance();

  static inline const RcvProgressMsg* internal_default_instance() {
    return reinterpret_cast<const RcvProgressMsg*>(
               &_RcvProgressMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RcvProgressMsg* other);

  // implements Message ----------------------------------------------

  inline RcvProgressMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RcvProgressMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcvProgressMsg& from);
  void MergeFrom(const RcvProgressMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcvProgressMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comment = 4;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // .SOMS.ProgressItem progress_item = 1;
  void clear_progress_item();
  static const int kProgressItemFieldNumber = 1;
  ::SOMS::ProgressItem progress_item() const;
  void set_progress_item(::SOMS::ProgressItem value);

  // .SOMS.ProgressResult progress_result = 2;
  void clear_progress_result();
  static const int kProgressResultFieldNumber = 2;
  ::SOMS::ProgressResult progress_result() const;
  void set_progress_result(::SOMS::ProgressResult value);

  // uint32 progress_time = 3;
  void clear_progress_time();
  static const int kProgressTimeFieldNumber = 3;
  ::google::protobuf::uint32 progress_time() const;
  void set_progress_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SOMS.RcvProgressMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  int progress_item_;
  int progress_result_;
  ::google::protobuf::uint32 progress_time_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllProjectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.AllProjectData) */ {
 public:
  AllProjectData();
  virtual ~AllProjectData();

  AllProjectData(const AllProjectData& from);

  inline AllProjectData& operator=(const AllProjectData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllProjectData& default_instance();

  static inline const AllProjectData* internal_default_instance() {
    return reinterpret_cast<const AllProjectData*>(
               &_AllProjectData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AllProjectData* other);

  // implements Message ----------------------------------------------

  inline AllProjectData* New() const PROTOBUF_FINAL { return New(NULL); }

  AllProjectData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllProjectData& from);
  void MergeFrom(const AllProjectData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllProjectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
  int rcvprogress_msg_size() const;
  void clear_rcvprogress_msg();
  static const int kRcvprogressMsgFieldNumber = 7;
  const ::SOMS::RcvProgressMsg& rcvprogress_msg(int index) const;
  ::SOMS::RcvProgressMsg* mutable_rcvprogress_msg(int index);
  ::SOMS::RcvProgressMsg* add_rcvprogress_msg();
  ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >*
      mutable_rcvprogress_msg();
  const ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >&
      rcvprogress_msg() const;

  // string feasible_comment = 9;
  void clear_feasible_comment();
  static const int kFeasibleCommentFieldNumber = 9;
  const ::std::string& feasible_comment() const;
  void set_feasible_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_feasible_comment(::std::string&& value);
  #endif
  void set_feasible_comment(const char* value);
  void set_feasible_comment(const char* value, size_t size);
  ::std::string* mutable_feasible_comment();
  ::std::string* release_feasible_comment();
  void set_allocated_feasible_comment(::std::string* feasible_comment);

  // .SOMS.ProjectMsg project_msg = 1;
  bool has_project_msg() const;
  void clear_project_msg();
  static const int kProjectMsgFieldNumber = 1;
  const ::SOMS::ProjectMsg& project_msg() const;
  ::SOMS::ProjectMsg* mutable_project_msg();
  ::SOMS::ProjectMsg* release_project_msg();
  void set_allocated_project_msg(::SOMS::ProjectMsg* project_msg);

  // .SOMS.State project_statue = 2;
  void clear_project_statue();
  static const int kProjectStatueFieldNumber = 2;
  ::SOMS::State project_statue() const;
  void set_project_statue(::SOMS::State value);

  // uint32 create_time = 3;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // uint32 real_begin_time = 4;
  void clear_real_begin_time();
  static const int kRealBeginTimeFieldNumber = 4;
  ::google::protobuf::uint32 real_begin_time() const;
  void set_real_begin_time(::google::protobuf::uint32 value);

  // uint32 keep_time = 5;
  void clear_keep_time();
  static const int kKeepTimeFieldNumber = 5;
  ::google::protobuf::uint32 keep_time() const;
  void set_keep_time(::google::protobuf::uint32 value);

  // uint32 rate_num = 6;
  void clear_rate_num();
  static const int kRateNumFieldNumber = 6;
  ::google::protobuf::uint32 rate_num() const;
  void set_rate_num(::google::protobuf::uint32 value);

  // .SOMS.FeasibleLevel level = 8;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::SOMS::FeasibleLevel level() const;
  void set_level(::SOMS::FeasibleLevel value);

  // uint32 tlj_station_num = 10;
  void clear_tlj_station_num();
  static const int kTljStationNumFieldNumber = 10;
  ::google::protobuf::uint32 tlj_station_num() const;
  void set_tlj_station_num(::google::protobuf::uint32 value);

  // uint32 real_end_time = 11;
  void clear_real_end_time();
  static const int kRealEndTimeFieldNumber = 11;
  ::google::protobuf::uint32 real_end_time() const;
  void set_real_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SOMS.AllProjectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg > rcvprogress_msg_;
  ::google::protobuf::internal::ArenaStringPtr feasible_comment_;
  ::SOMS::ProjectMsg* project_msg_;
  int project_statue_;
  ::google::protobuf::uint32 create_time_;
  ::google::protobuf::uint32 real_begin_time_;
  ::google::protobuf::uint32 keep_time_;
  ::google::protobuf::uint32 rate_num_;
  int level_;
  ::google::protobuf::uint32 tlj_station_num_;
  ::google::protobuf::uint32 real_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrainList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.TrainList) */ {
 public:
  TrainList();
  virtual ~TrainList();

  TrainList(const TrainList& from);

  inline TrainList& operator=(const TrainList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainList& default_instance();

  static inline const TrainList* internal_default_instance() {
    return reinterpret_cast<const TrainList*>(
               &_TrainList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TrainList* other);

  // implements Message ----------------------------------------------

  inline TrainList* New() const PROTOBUF_FINAL { return New(NULL); }

  TrainList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrainList& from);
  void MergeFrom(const TrainList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrainList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string train_number = 2;
  void clear_train_number();
  static const int kTrainNumberFieldNumber = 2;
  const ::std::string& train_number() const;
  void set_train_number(const ::std::string& value);
  #if LANG_CXX11
  void set_train_number(::std::string&& value);
  #endif
  void set_train_number(const char* value);
  void set_train_number(const char* value, size_t size);
  ::std::string* mutable_train_number();
  ::std::string* release_train_number();
  void set_allocated_train_number(::std::string* train_number);

  // uint64 train_id = 1;
  void clear_train_id();
  static const int kTrainIdFieldNumber = 1;
  ::google::protobuf::uint64 train_id() const;
  void set_train_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SOMS.TrainList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr train_number_;
  ::google::protobuf::uint64 train_id_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DispatcherList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.DispatcherList) */ {
 public:
  DispatcherList();
  virtual ~DispatcherList();

  DispatcherList(const DispatcherList& from);

  inline DispatcherList& operator=(const DispatcherList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DispatcherList& default_instance();

  static inline const DispatcherList* internal_default_instance() {
    return reinterpret_cast<const DispatcherList*>(
               &_DispatcherList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DispatcherList* other);

  // implements Message ----------------------------------------------

  inline DispatcherList* New() const PROTOBUF_FINAL { return New(NULL); }

  DispatcherList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DispatcherList& from);
  void MergeFrom(const DispatcherList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DispatcherList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dispatcher_number = 2;
  void clear_dispatcher_number();
  static const int kDispatcherNumberFieldNumber = 2;
  const ::std::string& dispatcher_number() const;
  void set_dispatcher_number(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatcher_number(::std::string&& value);
  #endif
  void set_dispatcher_number(const char* value);
  void set_dispatcher_number(const char* value, size_t size);
  ::std::string* mutable_dispatcher_number();
  ::std::string* release_dispatcher_number();
  void set_allocated_dispatcher_number(::std::string* dispatcher_number);

  // uint64 dispatcher_id = 1;
  void clear_dispatcher_id();
  static const int kDispatcherIdFieldNumber = 1;
  ::google::protobuf::uint64 dispatcher_id() const;
  void set_dispatcher_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SOMS.DispatcherList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dispatcher_number_;
  ::google::protobuf::uint64 dispatcher_id_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.GroupMsg) */ {
 public:
  GroupMsg();
  virtual ~GroupMsg();

  GroupMsg(const GroupMsg& from);

  inline GroupMsg& operator=(const GroupMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMsg& default_instance();

  static inline const GroupMsg* internal_default_instance() {
    return reinterpret_cast<const GroupMsg*>(
               &_GroupMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GroupMsg* other);

  // implements Message ----------------------------------------------

  inline GroupMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupMsg& from);
  void MergeFrom(const GroupMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_name = 2;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string dispatcher_leader = 3;
  void clear_dispatcher_leader();
  static const int kDispatcherLeaderFieldNumber = 3;
  const ::std::string& dispatcher_leader() const;
  void set_dispatcher_leader(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatcher_leader(::std::string&& value);
  #endif
  void set_dispatcher_leader(const char* value);
  void set_dispatcher_leader(const char* value, size_t size);
  ::std::string* mutable_dispatcher_leader();
  ::std::string* release_dispatcher_leader();
  void set_allocated_dispatcher_leader(::std::string* dispatcher_leader);

  // uint64 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 group_id() const;
  void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SOMS.GroupMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr dispatcher_leader_;
  ::google::protobuf::uint64 group_id_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrackMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SOMS.TrackMsg) */ {
 public:
  TrackMsg();
  virtual ~TrackMsg();

  TrackMsg(const TrackMsg& from);

  inline TrackMsg& operator=(const TrackMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackMsg& default_instance();

  static inline const TrackMsg* internal_default_instance() {
    return reinterpret_cast<const TrackMsg*>(
               &_TrackMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TrackMsg* other);

  // implements Message ----------------------------------------------

  inline TrackMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TrackMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrackMsg& from);
  void MergeFrom(const TrackMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrackMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string track_name = 2;
  void clear_track_name();
  static const int kTrackNameFieldNumber = 2;
  const ::std::string& track_name() const;
  void set_track_name(const ::std::string& value);
  #if LANG_CXX11
  void set_track_name(::std::string&& value);
  #endif
  void set_track_name(const char* value);
  void set_track_name(const char* value, size_t size);
  ::std::string* mutable_track_name();
  ::std::string* release_track_name();
  void set_allocated_track_name(::std::string* track_name);

  // uint64 track_id = 1;
  void clear_track_id();
  static const int kTrackIdFieldNumber = 1;
  ::google::protobuf::uint64 track_id() const;
  void set_track_id(::google::protobuf::uint64 value);

  // uint64 near_id = 3;
  void clear_near_id();
  static const int kNearIdFieldNumber = 3;
  ::google::protobuf::uint64 near_id() const;
  void set_near_id(::google::protobuf::uint64 value);

  // uint32 near_end = 4;
  void clear_near_end();
  static const int kNearEndFieldNumber = 4;
  ::google::protobuf::uint32 near_end() const;
  void set_near_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SOMS.TrackMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr track_name_;
  ::google::protobuf::uint64 track_id_;
  ::google::protobuf::uint64 near_id_;
  ::google::protobuf::uint32 near_end_;
  mutable int _cached_size_;
  friend struct protobuf_PublicType_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectItem

// uint32 order_num = 1;
inline void ProjectItem::clear_order_num() {
  order_num_ = 0u;
}
inline ::google::protobuf::uint32 ProjectItem::order_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.order_num)
  return order_num_;
}
inline void ProjectItem::set_order_num(::google::protobuf::uint32 value) {
  
  order_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.order_num)
}

// string track_name = 2;
inline void ProjectItem::clear_track_name() {
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectItem::track_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.track_name)
  return track_name_.GetNoArena();
}
inline void ProjectItem::set_track_name(const ::std::string& value) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.track_name)
}
#if LANG_CXX11
inline void ProjectItem::set_track_name(::std::string&& value) {
  
  track_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.track_name)
}
#endif
inline void ProjectItem::set_track_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.track_name)
}
inline void ProjectItem::set_track_name(const char* value, size_t size) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.track_name)
}
inline ::std::string* ProjectItem::mutable_track_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.track_name)
  return track_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectItem::release_track_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.track_name)
  
  return track_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectItem::set_allocated_track_name(::std::string* track_name) {
  if (track_name != NULL) {
    
  } else {
    
  }
  track_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), track_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.track_name)
}

// uint64 track_id = 3;
inline void ProjectItem::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ProjectItem::track_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.track_id)
  return track_id_;
}
inline void ProjectItem::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.track_id)
}

// .SOMS.Handle handle = 4;
inline void ProjectItem::clear_handle() {
  handle_ = 0;
}
inline ::SOMS::Handle ProjectItem::handle() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.handle)
  return static_cast< ::SOMS::Handle >(handle_);
}
inline void ProjectItem::set_handle(::SOMS::Handle value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.handle)
}

// uint32 train_num = 5;
inline void ProjectItem::clear_train_num() {
  train_num_ = 0u;
}
inline ::google::protobuf::uint32 ProjectItem::train_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.train_num)
  return train_num_;
}
inline void ProjectItem::set_train_num(::google::protobuf::uint32 value) {
  
  train_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.train_num)
}

// .SOMS.State state = 6;
inline void ProjectItem::clear_state() {
  state_ = 0;
}
inline ::SOMS::State ProjectItem::state() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.state)
  return static_cast< ::SOMS::State >(state_);
}
inline void ProjectItem::set_state(::SOMS::State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.state)
}

// uint32 time = 7;
inline void ProjectItem::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 ProjectItem::time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.time)
  return time_;
}
inline void ProjectItem::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.time)
}

// string comment = 8;
inline void ProjectItem::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectItem::comment() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.comment)
  return comment_.GetNoArena();
}
inline void ProjectItem::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.comment)
}
#if LANG_CXX11
inline void ProjectItem::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.comment)
}
#endif
inline void ProjectItem::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.comment)
}
inline void ProjectItem::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.comment)
}
inline ::std::string* ProjectItem::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectItem::release_comment() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectItem::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.comment)
}

// string front_end = 9;
inline void ProjectItem::clear_front_end() {
  front_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectItem::front_end() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.front_end)
  return front_end_.GetNoArena();
}
inline void ProjectItem::set_front_end(const ::std::string& value) {
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.front_end)
}
#if LANG_CXX11
inline void ProjectItem::set_front_end(::std::string&& value) {
  
  front_end_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.front_end)
}
#endif
inline void ProjectItem::set_front_end(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.front_end)
}
inline void ProjectItem::set_front_end(const char* value, size_t size) {
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.front_end)
}
inline ::std::string* ProjectItem::mutable_front_end() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.front_end)
  return front_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectItem::release_front_end() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.front_end)
  
  return front_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectItem::set_allocated_front_end(::std::string* front_end) {
  if (front_end != NULL) {
    
  } else {
    
  }
  front_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), front_end);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.front_end)
}

// -------------------------------------------------------------------

// ProjectMsg

// string project_id = 1;
inline void ProjectMsg::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::project_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_id)
  return project_id_.GetNoArena();
}
inline void ProjectMsg::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_id)
}
#if LANG_CXX11
inline void ProjectMsg::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_id)
}
#endif
inline void ProjectMsg::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_id)
}
inline void ProjectMsg::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_id)
}
inline ::std::string* ProjectMsg::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_project_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_id)
}

// repeated .SOMS.ProjectItem project_item = 2;
inline int ProjectMsg::project_item_size() const {
  return project_item_.size();
}
inline void ProjectMsg::clear_project_item() {
  project_item_.Clear();
}
inline const ::SOMS::ProjectItem& ProjectMsg::project_item(int index) const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_item)
  return project_item_.Get(index);
}
inline ::SOMS::ProjectItem* ProjectMsg::mutable_project_item(int index) {
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_item)
  return project_item_.Mutable(index);
}
inline ::SOMS::ProjectItem* ProjectMsg::add_project_item() {
  // @@protoc_insertion_point(field_add:SOMS.ProjectMsg.project_item)
  return project_item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >*
ProjectMsg::mutable_project_item() {
  // @@protoc_insertion_point(field_mutable_list:SOMS.ProjectMsg.project_item)
  return &project_item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >&
ProjectMsg::project_item() const {
  // @@protoc_insertion_point(field_list:SOMS.ProjectMsg.project_item)
  return project_item_;
}

// uint64 train_id = 3;
inline void ProjectMsg::clear_train_id() {
  train_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ProjectMsg::train_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.train_id)
  return train_id_;
}
inline void ProjectMsg::set_train_id(::google::protobuf::uint64 value) {
  
  train_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.train_id)
}

// uint32 begin_time = 4;
inline void ProjectMsg::clear_begin_time() {
  begin_time_ = 0u;
}
inline ::google::protobuf::uint32 ProjectMsg::begin_time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.begin_time)
  return begin_time_;
}
inline void ProjectMsg::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.begin_time)
}

// uint32 end_time = 5;
inline void ProjectMsg::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 ProjectMsg::end_time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.end_time)
  return end_time_;
}
inline void ProjectMsg::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.end_time)
}

// string dispatcher_id = 6;
inline void ProjectMsg::clear_dispatcher_id() {
  dispatcher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::dispatcher_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.dispatcher_id)
  return dispatcher_id_.GetNoArena();
}
inline void ProjectMsg::set_dispatcher_id(const ::std::string& value) {
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.dispatcher_id)
}
#if LANG_CXX11
inline void ProjectMsg::set_dispatcher_id(::std::string&& value) {
  
  dispatcher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.dispatcher_id)
}
#endif
inline void ProjectMsg::set_dispatcher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.dispatcher_id)
}
inline void ProjectMsg::set_dispatcher_id(const char* value, size_t size) {
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.dispatcher_id)
}
inline ::std::string* ProjectMsg::mutable_dispatcher_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.dispatcher_id)
  return dispatcher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_dispatcher_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.dispatcher_id)
  
  return dispatcher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_dispatcher_id(::std::string* dispatcher_id) {
  if (dispatcher_id != NULL) {
    
  } else {
    
  }
  dispatcher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.dispatcher_id)
}

// uint32 tlj_station_num = 7;
inline void ProjectMsg::clear_tlj_station_num() {
  tlj_station_num_ = 0u;
}
inline ::google::protobuf::uint32 ProjectMsg::tlj_station_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.tlj_station_num)
  return tlj_station_num_;
}
inline void ProjectMsg::set_tlj_station_num(::google::protobuf::uint32 value) {
  
  tlj_station_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.tlj_station_num)
}

// string dispatcher_name = 8;
inline void ProjectMsg::clear_dispatcher_name() {
  dispatcher_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::dispatcher_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.dispatcher_name)
  return dispatcher_name_.GetNoArena();
}
inline void ProjectMsg::set_dispatcher_name(const ::std::string& value) {
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.dispatcher_name)
}
#if LANG_CXX11
inline void ProjectMsg::set_dispatcher_name(::std::string&& value) {
  
  dispatcher_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.dispatcher_name)
}
#endif
inline void ProjectMsg::set_dispatcher_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.dispatcher_name)
}
inline void ProjectMsg::set_dispatcher_name(const char* value, size_t size) {
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.dispatcher_name)
}
inline ::std::string* ProjectMsg::mutable_dispatcher_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.dispatcher_name)
  return dispatcher_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_dispatcher_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.dispatcher_name)
  
  return dispatcher_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_dispatcher_name(::std::string* dispatcher_name) {
  if (dispatcher_name != NULL) {
    
  } else {
    
  }
  dispatcher_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.dispatcher_name)
}

// string train_name = 9;
inline void ProjectMsg::clear_train_name() {
  train_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::train_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.train_name)
  return train_name_.GetNoArena();
}
inline void ProjectMsg::set_train_name(const ::std::string& value) {
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.train_name)
}
#if LANG_CXX11
inline void ProjectMsg::set_train_name(::std::string&& value) {
  
  train_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.train_name)
}
#endif
inline void ProjectMsg::set_train_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.train_name)
}
inline void ProjectMsg::set_train_name(const char* value, size_t size) {
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.train_name)
}
inline ::std::string* ProjectMsg::mutable_train_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.train_name)
  return train_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_train_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.train_name)
  
  return train_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_train_name(::std::string* train_name) {
  if (train_name != NULL) {
    
  } else {
    
  }
  train_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), train_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.train_name)
}

// string project_name = 10;
inline void ProjectMsg::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::project_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_name)
  return project_name_.GetNoArena();
}
inline void ProjectMsg::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_name)
}
#if LANG_CXX11
inline void ProjectMsg::set_project_name(::std::string&& value) {
  
  project_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_name)
}
#endif
inline void ProjectMsg::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_name)
}
inline void ProjectMsg::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_name)
}
inline ::std::string* ProjectMsg::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_project_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_name)
}

// string parent_project_id = 11;
inline void ProjectMsg::clear_parent_project_id() {
  parent_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::parent_project_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.parent_project_id)
  return parent_project_id_.GetNoArena();
}
inline void ProjectMsg::set_parent_project_id(const ::std::string& value) {
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.parent_project_id)
}
#if LANG_CXX11
inline void ProjectMsg::set_parent_project_id(::std::string&& value) {
  
  parent_project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.parent_project_id)
}
#endif
inline void ProjectMsg::set_parent_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.parent_project_id)
}
inline void ProjectMsg::set_parent_project_id(const char* value, size_t size) {
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.parent_project_id)
}
inline ::std::string* ProjectMsg::mutable_parent_project_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.parent_project_id)
  return parent_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_parent_project_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.parent_project_id)
  
  return parent_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_parent_project_id(::std::string* parent_project_id) {
  if (parent_project_id != NULL) {
    
  } else {
    
  }
  parent_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_project_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.parent_project_id)
}

// string project_content = 12;
inline void ProjectMsg::clear_project_content() {
  project_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::project_content() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_content)
  return project_content_.GetNoArena();
}
inline void ProjectMsg::set_project_content(const ::std::string& value) {
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_content)
}
#if LANG_CXX11
inline void ProjectMsg::set_project_content(::std::string&& value) {
  
  project_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_content)
}
#endif
inline void ProjectMsg::set_project_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_content)
}
inline void ProjectMsg::set_project_content(const char* value, size_t size) {
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_content)
}
inline ::std::string* ProjectMsg::mutable_project_content() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_content)
  return project_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_project_content() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_content)
  
  return project_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_project_content(::std::string* project_content) {
  if (project_content != NULL) {
    
  } else {
    
  }
  project_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_content);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_content)
}

// .SOMS.GroupMsg group_msg = 13;
inline bool ProjectMsg::has_group_msg() const {
  return this != internal_default_instance() && group_msg_ != NULL;
}
inline void ProjectMsg::clear_group_msg() {
  if (GetArenaNoVirtual() == NULL && group_msg_ != NULL) delete group_msg_;
  group_msg_ = NULL;
}
inline const ::SOMS::GroupMsg& ProjectMsg::group_msg() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.group_msg)
  return group_msg_ != NULL ? *group_msg_
                         : *::SOMS::GroupMsg::internal_default_instance();
}
inline ::SOMS::GroupMsg* ProjectMsg::mutable_group_msg() {
  
  if (group_msg_ == NULL) {
    group_msg_ = new ::SOMS::GroupMsg;
  }
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.group_msg)
  return group_msg_;
}
inline ::SOMS::GroupMsg* ProjectMsg::release_group_msg() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.group_msg)
  
  ::SOMS::GroupMsg* temp = group_msg_;
  group_msg_ = NULL;
  return temp;
}
inline void ProjectMsg::set_allocated_group_msg(::SOMS::GroupMsg* group_msg) {
  delete group_msg_;
  group_msg_ = group_msg;
  if (group_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.group_msg)
}

// string swticher = 14;
inline void ProjectMsg::clear_swticher() {
  swticher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectMsg::swticher() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.swticher)
  return swticher_.GetNoArena();
}
inline void ProjectMsg::set_swticher(const ::std::string& value) {
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.swticher)
}
#if LANG_CXX11
inline void ProjectMsg::set_swticher(::std::string&& value) {
  
  swticher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.swticher)
}
#endif
inline void ProjectMsg::set_swticher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.swticher)
}
inline void ProjectMsg::set_swticher(const char* value, size_t size) {
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.swticher)
}
inline ::std::string* ProjectMsg::mutable_swticher() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.swticher)
  return swticher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectMsg::release_swticher() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.swticher)
  
  return swticher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectMsg::set_allocated_swticher(::std::string* swticher) {
  if (swticher != NULL) {
    
  } else {
    
  }
  swticher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swticher);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.swticher)
}

// -------------------------------------------------------------------

// RcvProgressMsg

// .SOMS.ProgressItem progress_item = 1;
inline void RcvProgressMsg::clear_progress_item() {
  progress_item_ = 0;
}
inline ::SOMS::ProgressItem RcvProgressMsg::progress_item() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_item)
  return static_cast< ::SOMS::ProgressItem >(progress_item_);
}
inline void RcvProgressMsg::set_progress_item(::SOMS::ProgressItem value) {
  
  progress_item_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_item)
}

// .SOMS.ProgressResult progress_result = 2;
inline void RcvProgressMsg::clear_progress_result() {
  progress_result_ = 0;
}
inline ::SOMS::ProgressResult RcvProgressMsg::progress_result() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_result)
  return static_cast< ::SOMS::ProgressResult >(progress_result_);
}
inline void RcvProgressMsg::set_progress_result(::SOMS::ProgressResult value) {
  
  progress_result_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_result)
}

// uint32 progress_time = 3;
inline void RcvProgressMsg::clear_progress_time() {
  progress_time_ = 0u;
}
inline ::google::protobuf::uint32 RcvProgressMsg::progress_time() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_time)
  return progress_time_;
}
inline void RcvProgressMsg::set_progress_time(::google::protobuf::uint32 value) {
  
  progress_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_time)
}

// string comment = 4;
inline void RcvProgressMsg::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RcvProgressMsg::comment() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.comment)
  return comment_.GetNoArena();
}
inline void RcvProgressMsg::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.comment)
}
#if LANG_CXX11
inline void RcvProgressMsg::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.RcvProgressMsg.comment)
}
#endif
inline void RcvProgressMsg::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.RcvProgressMsg.comment)
}
inline void RcvProgressMsg::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.RcvProgressMsg.comment)
}
inline ::std::string* RcvProgressMsg::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.RcvProgressMsg.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcvProgressMsg::release_comment() {
  // @@protoc_insertion_point(field_release:SOMS.RcvProgressMsg.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcvProgressMsg::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.RcvProgressMsg.comment)
}

// -------------------------------------------------------------------

// AllProjectData

// .SOMS.ProjectMsg project_msg = 1;
inline bool AllProjectData::has_project_msg() const {
  return this != internal_default_instance() && project_msg_ != NULL;
}
inline void AllProjectData::clear_project_msg() {
  if (GetArenaNoVirtual() == NULL && project_msg_ != NULL) delete project_msg_;
  project_msg_ = NULL;
}
inline const ::SOMS::ProjectMsg& AllProjectData::project_msg() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.project_msg)
  return project_msg_ != NULL ? *project_msg_
                         : *::SOMS::ProjectMsg::internal_default_instance();
}
inline ::SOMS::ProjectMsg* AllProjectData::mutable_project_msg() {
  
  if (project_msg_ == NULL) {
    project_msg_ = new ::SOMS::ProjectMsg;
  }
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.project_msg)
  return project_msg_;
}
inline ::SOMS::ProjectMsg* AllProjectData::release_project_msg() {
  // @@protoc_insertion_point(field_release:SOMS.AllProjectData.project_msg)
  
  ::SOMS::ProjectMsg* temp = project_msg_;
  project_msg_ = NULL;
  return temp;
}
inline void AllProjectData::set_allocated_project_msg(::SOMS::ProjectMsg* project_msg) {
  delete project_msg_;
  project_msg_ = project_msg;
  if (project_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SOMS.AllProjectData.project_msg)
}

// .SOMS.State project_statue = 2;
inline void AllProjectData::clear_project_statue() {
  project_statue_ = 0;
}
inline ::SOMS::State AllProjectData::project_statue() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.project_statue)
  return static_cast< ::SOMS::State >(project_statue_);
}
inline void AllProjectData::set_project_statue(::SOMS::State value) {
  
  project_statue_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.project_statue)
}

// uint32 create_time = 3;
inline void AllProjectData::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::create_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.create_time)
  return create_time_;
}
inline void AllProjectData::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.create_time)
}

// uint32 real_begin_time = 4;
inline void AllProjectData::clear_real_begin_time() {
  real_begin_time_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::real_begin_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.real_begin_time)
  return real_begin_time_;
}
inline void AllProjectData::set_real_begin_time(::google::protobuf::uint32 value) {
  
  real_begin_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.real_begin_time)
}

// uint32 keep_time = 5;
inline void AllProjectData::clear_keep_time() {
  keep_time_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::keep_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.keep_time)
  return keep_time_;
}
inline void AllProjectData::set_keep_time(::google::protobuf::uint32 value) {
  
  keep_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.keep_time)
}

// uint32 rate_num = 6;
inline void AllProjectData::clear_rate_num() {
  rate_num_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::rate_num() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.rate_num)
  return rate_num_;
}
inline void AllProjectData::set_rate_num(::google::protobuf::uint32 value) {
  
  rate_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.rate_num)
}

// repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
inline int AllProjectData::rcvprogress_msg_size() const {
  return rcvprogress_msg_.size();
}
inline void AllProjectData::clear_rcvprogress_msg() {
  rcvprogress_msg_.Clear();
}
inline const ::SOMS::RcvProgressMsg& AllProjectData::rcvprogress_msg(int index) const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Get(index);
}
inline ::SOMS::RcvProgressMsg* AllProjectData::mutable_rcvprogress_msg(int index) {
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Mutable(index);
}
inline ::SOMS::RcvProgressMsg* AllProjectData::add_rcvprogress_msg() {
  // @@protoc_insertion_point(field_add:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >*
AllProjectData::mutable_rcvprogress_msg() {
  // @@protoc_insertion_point(field_mutable_list:SOMS.AllProjectData.rcvprogress_msg)
  return &rcvprogress_msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >&
AllProjectData::rcvprogress_msg() const {
  // @@protoc_insertion_point(field_list:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_;
}

// .SOMS.FeasibleLevel level = 8;
inline void AllProjectData::clear_level() {
  level_ = 0;
}
inline ::SOMS::FeasibleLevel AllProjectData::level() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.level)
  return static_cast< ::SOMS::FeasibleLevel >(level_);
}
inline void AllProjectData::set_level(::SOMS::FeasibleLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.level)
}

// string feasible_comment = 9;
inline void AllProjectData::clear_feasible_comment() {
  feasible_comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllProjectData::feasible_comment() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.feasible_comment)
  return feasible_comment_.GetNoArena();
}
inline void AllProjectData::set_feasible_comment(const ::std::string& value) {
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.feasible_comment)
}
#if LANG_CXX11
inline void AllProjectData::set_feasible_comment(::std::string&& value) {
  
  feasible_comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.AllProjectData.feasible_comment)
}
#endif
inline void AllProjectData::set_feasible_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.AllProjectData.feasible_comment)
}
inline void AllProjectData::set_feasible_comment(const char* value, size_t size) {
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.AllProjectData.feasible_comment)
}
inline ::std::string* AllProjectData::mutable_feasible_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.feasible_comment)
  return feasible_comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllProjectData::release_feasible_comment() {
  // @@protoc_insertion_point(field_release:SOMS.AllProjectData.feasible_comment)
  
  return feasible_comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllProjectData::set_allocated_feasible_comment(::std::string* feasible_comment) {
  if (feasible_comment != NULL) {
    
  } else {
    
  }
  feasible_comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feasible_comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.AllProjectData.feasible_comment)
}

// uint32 tlj_station_num = 10;
inline void AllProjectData::clear_tlj_station_num() {
  tlj_station_num_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::tlj_station_num() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.tlj_station_num)
  return tlj_station_num_;
}
inline void AllProjectData::set_tlj_station_num(::google::protobuf::uint32 value) {
  
  tlj_station_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.tlj_station_num)
}

// uint32 real_end_time = 11;
inline void AllProjectData::clear_real_end_time() {
  real_end_time_ = 0u;
}
inline ::google::protobuf::uint32 AllProjectData::real_end_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.real_end_time)
  return real_end_time_;
}
inline void AllProjectData::set_real_end_time(::google::protobuf::uint32 value) {
  
  real_end_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.real_end_time)
}

// -------------------------------------------------------------------

// TrainList

// uint64 train_id = 1;
inline void TrainList::clear_train_id() {
  train_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrainList::train_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrainList.train_id)
  return train_id_;
}
inline void TrainList::set_train_id(::google::protobuf::uint64 value) {
  
  train_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrainList.train_id)
}

// string train_number = 2;
inline void TrainList::clear_train_number() {
  train_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainList::train_number() const {
  // @@protoc_insertion_point(field_get:SOMS.TrainList.train_number)
  return train_number_.GetNoArena();
}
inline void TrainList::set_train_number(const ::std::string& value) {
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.TrainList.train_number)
}
#if LANG_CXX11
inline void TrainList::set_train_number(::std::string&& value) {
  
  train_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.TrainList.train_number)
}
#endif
inline void TrainList::set_train_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.TrainList.train_number)
}
inline void TrainList::set_train_number(const char* value, size_t size) {
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.TrainList.train_number)
}
inline ::std::string* TrainList::mutable_train_number() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.TrainList.train_number)
  return train_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainList::release_train_number() {
  // @@protoc_insertion_point(field_release:SOMS.TrainList.train_number)
  
  return train_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainList::set_allocated_train_number(::std::string* train_number) {
  if (train_number != NULL) {
    
  } else {
    
  }
  train_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), train_number);
  // @@protoc_insertion_point(field_set_allocated:SOMS.TrainList.train_number)
}

// -------------------------------------------------------------------

// DispatcherList

// uint64 dispatcher_id = 1;
inline void DispatcherList::clear_dispatcher_id() {
  dispatcher_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DispatcherList::dispatcher_id() const {
  // @@protoc_insertion_point(field_get:SOMS.DispatcherList.dispatcher_id)
  return dispatcher_id_;
}
inline void DispatcherList::set_dispatcher_id(::google::protobuf::uint64 value) {
  
  dispatcher_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.DispatcherList.dispatcher_id)
}

// string dispatcher_number = 2;
inline void DispatcherList::clear_dispatcher_number() {
  dispatcher_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DispatcherList::dispatcher_number() const {
  // @@protoc_insertion_point(field_get:SOMS.DispatcherList.dispatcher_number)
  return dispatcher_number_.GetNoArena();
}
inline void DispatcherList::set_dispatcher_number(const ::std::string& value) {
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.DispatcherList.dispatcher_number)
}
#if LANG_CXX11
inline void DispatcherList::set_dispatcher_number(::std::string&& value) {
  
  dispatcher_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.DispatcherList.dispatcher_number)
}
#endif
inline void DispatcherList::set_dispatcher_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.DispatcherList.dispatcher_number)
}
inline void DispatcherList::set_dispatcher_number(const char* value, size_t size) {
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.DispatcherList.dispatcher_number)
}
inline ::std::string* DispatcherList::mutable_dispatcher_number() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.DispatcherList.dispatcher_number)
  return dispatcher_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DispatcherList::release_dispatcher_number() {
  // @@protoc_insertion_point(field_release:SOMS.DispatcherList.dispatcher_number)
  
  return dispatcher_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DispatcherList::set_allocated_dispatcher_number(::std::string* dispatcher_number) {
  if (dispatcher_number != NULL) {
    
  } else {
    
  }
  dispatcher_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_number);
  // @@protoc_insertion_point(field_set_allocated:SOMS.DispatcherList.dispatcher_number)
}

// -------------------------------------------------------------------

// GroupMsg

// uint64 group_id = 1;
inline void GroupMsg::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupMsg::group_id() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.group_id)
  return group_id_;
}
inline void GroupMsg::set_group_id(::google::protobuf::uint64 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.group_id)
}

// string group_name = 2;
inline void GroupMsg::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMsg::group_name() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.group_name)
  return group_name_.GetNoArena();
}
inline void GroupMsg::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.group_name)
}
#if LANG_CXX11
inline void GroupMsg::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.GroupMsg.group_name)
}
#endif
inline void GroupMsg::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.GroupMsg.group_name)
}
inline void GroupMsg::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.GroupMsg.group_name)
}
inline ::std::string* GroupMsg::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.GroupMsg.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMsg::release_group_name() {
  // @@protoc_insertion_point(field_release:SOMS.GroupMsg.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMsg::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.GroupMsg.group_name)
}

// string dispatcher_leader = 3;
inline void GroupMsg::clear_dispatcher_leader() {
  dispatcher_leader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMsg::dispatcher_leader() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.dispatcher_leader)
  return dispatcher_leader_.GetNoArena();
}
inline void GroupMsg::set_dispatcher_leader(const ::std::string& value) {
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.dispatcher_leader)
}
#if LANG_CXX11
inline void GroupMsg::set_dispatcher_leader(::std::string&& value) {
  
  dispatcher_leader_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.GroupMsg.dispatcher_leader)
}
#endif
inline void GroupMsg::set_dispatcher_leader(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.GroupMsg.dispatcher_leader)
}
inline void GroupMsg::set_dispatcher_leader(const char* value, size_t size) {
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.GroupMsg.dispatcher_leader)
}
inline ::std::string* GroupMsg::mutable_dispatcher_leader() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.GroupMsg.dispatcher_leader)
  return dispatcher_leader_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMsg::release_dispatcher_leader() {
  // @@protoc_insertion_point(field_release:SOMS.GroupMsg.dispatcher_leader)
  
  return dispatcher_leader_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMsg::set_allocated_dispatcher_leader(::std::string* dispatcher_leader) {
  if (dispatcher_leader != NULL) {
    
  } else {
    
  }
  dispatcher_leader_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_leader);
  // @@protoc_insertion_point(field_set_allocated:SOMS.GroupMsg.dispatcher_leader)
}

// -------------------------------------------------------------------

// TrackMsg

// uint64 track_id = 1;
inline void TrackMsg::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrackMsg::track_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.track_id)
  return track_id_;
}
inline void TrackMsg::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.track_id)
}

// string track_name = 2;
inline void TrackMsg::clear_track_name() {
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrackMsg::track_name() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.track_name)
  return track_name_.GetNoArena();
}
inline void TrackMsg::set_track_name(const ::std::string& value) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.track_name)
}
#if LANG_CXX11
inline void TrackMsg::set_track_name(::std::string&& value) {
  
  track_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.TrackMsg.track_name)
}
#endif
inline void TrackMsg::set_track_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.TrackMsg.track_name)
}
inline void TrackMsg::set_track_name(const char* value, size_t size) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.TrackMsg.track_name)
}
inline ::std::string* TrackMsg::mutable_track_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.TrackMsg.track_name)
  return track_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrackMsg::release_track_name() {
  // @@protoc_insertion_point(field_release:SOMS.TrackMsg.track_name)
  
  return track_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackMsg::set_allocated_track_name(::std::string* track_name) {
  if (track_name != NULL) {
    
  } else {
    
  }
  track_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), track_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.TrackMsg.track_name)
}

// uint64 near_id = 3;
inline void TrackMsg::clear_near_id() {
  near_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrackMsg::near_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.near_id)
  return near_id_;
}
inline void TrackMsg::set_near_id(::google::protobuf::uint64 value) {
  
  near_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.near_id)
}

// uint32 near_end = 4;
inline void TrackMsg::clear_near_end() {
  near_end_ = 0u;
}
inline ::google::protobuf::uint32 TrackMsg::near_end() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.near_end)
  return near_end_;
}
inline void TrackMsg::set_near_end(::google::protobuf::uint32 value) {
  
  near_end_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.near_end)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace SOMS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SOMS::RegisterStatue> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::RegisterStatue>() {
  return ::SOMS::RegisterStatue_descriptor();
}
template <> struct is_proto_enum< ::SOMS::LoginResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::LoginResult>() {
  return ::SOMS::LoginResult_descriptor();
}
template <> struct is_proto_enum< ::SOMS::FileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::FileType>() {
  return ::SOMS::FileType_descriptor();
}
template <> struct is_proto_enum< ::SOMS::Handle> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::Handle>() {
  return ::SOMS::Handle_descriptor();
}
template <> struct is_proto_enum< ::SOMS::State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::State>() {
  return ::SOMS::State_descriptor();
}
template <> struct is_proto_enum< ::SOMS::FeasibleLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::FeasibleLevel>() {
  return ::SOMS::FeasibleLevel_descriptor();
}
template <> struct is_proto_enum< ::SOMS::ProgressItem> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::ProgressItem>() {
  return ::SOMS::ProgressItem_descriptor();
}
template <> struct is_proto_enum< ::SOMS::ProgressResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::ProgressResult>() {
  return ::SOMS::ProgressResult_descriptor();
}
template <> struct is_proto_enum< ::SOMS::ReceiveStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SOMS::ReceiveStatus>() {
  return ::SOMS::ReceiveStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PublicType_2eproto__INCLUDED
