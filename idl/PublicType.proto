syntax = "proto3";
package SOMS;
option java_package = "com.lxkj.soms.proto";
option java_outer_classname = "ProtoEntity";

// 2022/5/31 wym 首次创建

// 2022/06/02 kxf ProjectMsg 增加parent_project_id 字段

// 2022/06/14 wym  ProjectMsg 增加project_content调车作业单内容，group_msg 作业组信息，swticher 调车区长
//                ProjectItem 增加front_end 首尾

// 2022/06/21 wym 新增报警信息（AlarmData）

// 2022/06/28 wym 报警信息（AlarmData）中，任务ID(project_id)类型由uint32改为string

// 2022/06/30 wym 报警信息（AlarmData）中，新增报警机车所在区段(line_id)

// 2022/07/06 kxf 新增股道信息 (TrackInfo)、新增定位信息(LocationInfo)、新增定位状态(LocationResult)

// 2022/07/07 wym 新增车载信息（TrainInfo），位置信息（TrainPositionData），TDCS站场信息（TDCSStationData）,站存车信息（StationCarriageData）

//2022/07/25 cgq 新增机车状态(TrainState)，  机车信息(TrainInfo)中，工况(condition)类型由uint32改为string，模式(model)由string改为bytes 

//2022/07/08/09 TrainInfo增加节号(sectionno)

//2022/08/22 kxf 新增 LocationDistance、LocationType

//2022/08/24 kxf 删除LocationDistance中 bool leftElement = 3; //是否是左侧元素

//2022/08/25 kxf 修改 LocationInfo 增加字段

//2022/08/25 wym 站存车信息（TrackCarriageData）中新增站存车方向（CarriageDirectStruct）和打点信息（PositionStruct），新增调车员位置信息（DispatchersData）

//2022/09/05 wym 新增股道基础数据结构定义（TrackMsg）

//2022/09/14 kxf 修改LocationDistance 增加 uint64 elementId = 3; //距离元素Id

//2022/09/20 kxf 修改LocationInfo 变更 string accuracy = 1; 为uint32 accuracy = 1;

//2022-09/26 kxf 增加 OtherElement ElementStatus

//2022-10-09 kxf LocationDistance 增加     uint64 originalElementId = 4; //元素原始id

//2022-11-09 wym 新增调车员位置结构（DispatcherPosition）

//2022/11/25 nwh 新增运行图协议 MDailyPlanLine,MDailyPlanLineItem,MDailyPlanLineStations

//2022/12/02 zkk 新增天线距离一端二端距离distanceLinea distanceLineb;新增推车状态字段enum pushtrainstat{ unknow = 0; noPushTrain = 1; pushTrain = 2;};

//2022/12/08 zkk 增加作业单评价 ProjectEvaluationData EvaluationResult

//2022/12/09 wym 增加历史作业单查询信息 HistoryQueryData

//2022/12/9 nwh 新增报警类型定义AlarmType

//2022/12/14 wym 历史回放查询信息（HistoryQueryData）中增加文件下载列表（file_name_list）
//               报警信息（AlarmData）增加调车组（group_name）和作业单号（project_num）

//2022/12/22 zkk 增加用户角色 站信息列表
//2023/01/28 zkk 报警信息新增语音播报内容

//2023年2月6日 zkk TrackCarriageData 站存车新增status字段 0-正常 1-异常

//2023/02/20 wym 作业任务单状态中增加已过期类型（kExpired）



// 注册返回状态
enum RegisterStatue {
    kUnknowRegister = 0; // 未知
    kSuccessRegister = 1; // 成功
    kWrongRegister = 2;  // 失败
}


// 登录返回状态
enum LoginResult {
    kUnknowLogin = 0; // 未知
    kSuccessLogin = 1; // 成功
    kPasswordWrongLogin = 2;// 密码错误
    kNoUserLogin = 3;// 用户不存在
    kOverTimeLogin = 4;// 用户过期
}

// 文件类型
enum FileType{
    kUnknowFileType = 0; // 未知
    kDbFile = 1; // db文件
    kSoftware = 2;// 软件
}

// 每条作业内容的具体字段
message ProjectItem {
    uint32 order_num = 1; // 作业任务序号
    string track_name = 2;// 股道名称
    uint64 track_id = 3;  // ID
    Handle handle = 4;    // 操作
    uint32 train_num = 5; // 辆数
    State state = 6;    // 状态
    uint32 time = 7;      // 时间
    string comment = 8;   // 备注
	string front_end=9;   // 首尾
}

// 作业通知单的内容
message ProjectMsg {
    string project_id = 1;                 // 调车作业单号
    repeated ProjectItem project_item = 2; // 任务条目
    uint64 train_id = 3;                   // 机车ID
    uint32 begin_time = 4;                 // 计划开始时间
    uint32 end_time = 5;                   // 计划结束时间
    string dispatcher_id = 6;              // 调车员ID
    uint32 tlj_station_num = 7;            // 局码*10000+站码
    string dispatcher_name = 8;            // 调车长名字
    string train_name = 9;                 // 机车号
    string project_name = 10;              // 调车作业单名称
    string parent_project_id = 11 ;        // 调车作业单父id  调车作业单修改会生成一个新的projectId 如果为空则说明是新建调车作业单
	string project_content=12;             // 调车作业单内容
	GroupMsg group_msg=13;                 // 作业组信息
	string swticher=14;                    // 调车区长
}

// 作业单中的操作类型
enum Handle {
    kUnknowHandle = 0; // 未知
    kAdd = 1;    // 挂+
    kReduce = 2;  // 减-
    kTurnSouth = 3;// 转南
    kTurnNorth = 4;// 转北
    kStart = 5;   // 开车
}

// 作业任务状态
enum State {
    kUnknowStatue = 0;  // 未知
    kRunning = 1;	    // 进行中
    kFinish = 2; 	    // 已完成
    kNotBegin = 3;      // 未开始
    kModify = 4;        // 修改中
	kExpired = 5;       // 已过期
}

// 可执行性分析结果
enum FeasibleLevel{
    kUnknowFeasible = 0;  //未知
    Feasible_low = 1; // 低
    Feasible_mid = 2; // 中
    Feasible_high = 3; // 高
}

// 每一项进度内容
message RcvProgressMsg {
    ProgressItem progress_item = 1;   // 进度项名称
    ProgressResult progress_result = 2; // 进度执行结果
    uint32 progress_time = 3;        // 时间
    string comment = 4;             // 备注
}

// 进度类型
enum ProgressItem {
    kUnknowProgress = 0;           // 未知
    kDispatcherReceve = 1;    // 调车员接收
    kDispatcherConfirm = 2;   // 调车员确认
    kDriverReceve = 3;       // 乘务员接收
    kDriverConfirm = 4;      // 乘务员确认
    kWatcherReceve = 5;     // 车站值班员接收
    kWatcherConfirm = 6;      // 车站值班员确认
    kWatcherApplyRoute = 7;   // 车站值班员申请进路
}

// 进度结果
enum ProgressResult {
    kUnknowProgressResult = 0;  //未知
    kSuccess = 1;   //成功
    kFail = 2;  // 失败
}

// 调车任务单的全部信息
message AllProjectData{
    ProjectMsg project_msg = 1;        // 调车作业通知单(详见 创建调车作业通知单6.4.1中定义)
    State    project_statue = 2;       // 当前任务状态
    uint32    create_time = 3;         // 创建时间
    uint32    real_begin_time = 4;     // 实际开始时间
    uint32      keep_time = 5;          //进行时长
    uint32    rate_num = 6;           //执行进度
    repeated RcvProgressMsg rcvprogress_msg = 7;// 接收确认进度
    FeasibleLevel level = 8;            // 可执行性等级
    string feasible_comment = 9;        //  分析结果
    uint32 tlj_station_num = 10;          // 局码*10000+站码
    uint32    real_end_time = 11;     // 实际完成时间
}

// 机车信息
message TrainList{
    uint64 train_id = 1 ; //机车id
    string train_number = 2; //机车编号
}

// 调车员信息
message DispatcherList{
    uint64 dispatcher_id = 1 ; //调车员id
    string dispatcher_number = 2; //调车员编号
}

// 作业组信息
message GroupMsg{
    uint64 group_id = 1 ; // 作业组id
    string group_name = 2; // 作业组名称
	string dispatcher_leader=3; // 调车长姓名
}

// 站场股道基础信息
message TrackMsg{
    uint64 track_id=1; // 股道id
	string track_name=2; // 现车系统股道码
	uint64 near_id=3; // 相邻元素（站存车 小号方向）
	uint32 near_end=4;// 相邻元素端号（道岔时有效）
}

//调车单接收状态
enum ReceiveStatus{
    kUnknown = 0; //未知
    kReceive = 1; //程序接收
    kConfirm = 2; //人工确认
    kWrong = 3; //失败
}


