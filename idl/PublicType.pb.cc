// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicType.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PublicType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SOMS {
class ProjectItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProjectItem> {
} _ProjectItem_default_instance_;
class ProjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProjectMsg> {
} _ProjectMsg_default_instance_;
class RcvProgressMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcvProgressMsg> {
} _RcvProgressMsg_default_instance_;
class AllProjectDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllProjectData> {
} _AllProjectData_default_instance_;
class TrainListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrainList> {
} _TrainList_default_instance_;
class DispatcherListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DispatcherList> {
} _DispatcherList_default_instance_;
class GroupMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GroupMsg> {
} _GroupMsg_default_instance_;
class TrackMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrackMsg> {
} _TrackMsg_default_instance_;

namespace protobuf_PublicType_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, order_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, track_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, track_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, train_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectItem, front_end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, project_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, train_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, dispatcher_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, tlj_station_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, dispatcher_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, train_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, project_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, parent_project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, project_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, group_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMsg, swticher_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcvProgressMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcvProgressMsg, progress_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcvProgressMsg, progress_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcvProgressMsg, progress_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcvProgressMsg, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, project_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, project_statue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, real_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, keep_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, rate_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, rcvprogress_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, feasible_comment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, tlj_station_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllProjectData, real_end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainList, train_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainList, train_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DispatcherList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DispatcherList, dispatcher_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DispatcherList, dispatcher_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMsg, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMsg, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMsg, dispatcher_leader_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackMsg, track_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackMsg, track_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackMsg, near_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackMsg, near_end_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ProjectItem)},
  { 14, -1, sizeof(ProjectMsg)},
  { 33, -1, sizeof(RcvProgressMsg)},
  { 42, -1, sizeof(AllProjectData)},
  { 58, -1, sizeof(TrainList)},
  { 65, -1, sizeof(DispatcherList)},
  { 72, -1, sizeof(GroupMsg)},
  { 80, -1, sizeof(TrackMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcvProgressMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllProjectData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrainList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DispatcherList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrackMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PublicType.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProjectItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RcvProgressMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AllProjectData_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TrainList_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _DispatcherList_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GroupMsg_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _TrackMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProjectItem_default_instance_.DefaultConstruct();
  _ProjectMsg_default_instance_.DefaultConstruct();
  _RcvProgressMsg_default_instance_.DefaultConstruct();
  _AllProjectData_default_instance_.DefaultConstruct();
  _TrainList_default_instance_.DefaultConstruct();
  _DispatcherList_default_instance_.DefaultConstruct();
  _GroupMsg_default_instance_.DefaultConstruct();
  _TrackMsg_default_instance_.DefaultConstruct();
  _ProjectMsg_default_instance_.get_mutable()->group_msg_ = const_cast< ::SOMS::GroupMsg*>(
      ::SOMS::GroupMsg::internal_default_instance());
  _AllProjectData_default_instance_.get_mutable()->project_msg_ = const_cast< ::SOMS::ProjectMsg*>(
      ::SOMS::ProjectMsg::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020PublicType.proto\022\004SOMS\"\305\001\n\013ProjectItem"
      "\022\021\n\torder_num\030\001 \001(\r\022\022\n\ntrack_name\030\002 \001(\t\022"
      "\020\n\010track_id\030\003 \001(\004\022\034\n\006handle\030\004 \001(\0162\014.SOMS"
      ".Handle\022\021\n\ttrain_num\030\005 \001(\r\022\032\n\005state\030\006 \001("
      "\0162\013.SOMS.State\022\014\n\004time\030\007 \001(\r\022\017\n\007comment\030"
      "\010 \001(\t\022\021\n\tfront_end\030\t \001(\t\"\335\002\n\nProjectMsg\022"
      "\022\n\nproject_id\030\001 \001(\t\022\'\n\014project_item\030\002 \003("
      "\0132\021.SOMS.ProjectItem\022\020\n\010train_id\030\003 \001(\004\022\022"
      "\n\nbegin_time\030\004 \001(\r\022\020\n\010end_time\030\005 \001(\r\022\025\n\r"
      "dispatcher_id\030\006 \001(\t\022\027\n\017tlj_station_num\030\007"
      " \001(\r\022\027\n\017dispatcher_name\030\010 \001(\t\022\022\n\ntrain_n"
      "ame\030\t \001(\t\022\024\n\014project_name\030\n \001(\t\022\031\n\021paren"
      "t_project_id\030\013 \001(\t\022\027\n\017project_content\030\014 "
      "\001(\t\022!\n\tgroup_msg\030\r \001(\0132\016.SOMS.GroupMsg\022\020"
      "\n\010swticher\030\016 \001(\t\"\222\001\n\016RcvProgressMsg\022)\n\rp"
      "rogress_item\030\001 \001(\0162\022.SOMS.ProgressItem\022-"
      "\n\017progress_result\030\002 \001(\0162\024.SOMS.ProgressR"
      "esult\022\025\n\rprogress_time\030\003 \001(\r\022\017\n\007comment\030"
      "\004 \001(\t\"\314\002\n\016AllProjectData\022%\n\013project_msg\030"
      "\001 \001(\0132\020.SOMS.ProjectMsg\022#\n\016project_statu"
      "e\030\002 \001(\0162\013.SOMS.State\022\023\n\013create_time\030\003 \001("
      "\r\022\027\n\017real_begin_time\030\004 \001(\r\022\021\n\tkeep_time\030"
      "\005 \001(\r\022\020\n\010rate_num\030\006 \001(\r\022-\n\017rcvprogress_m"
      "sg\030\007 \003(\0132\024.SOMS.RcvProgressMsg\022\"\n\005level\030"
      "\010 \001(\0162\023.SOMS.FeasibleLevel\022\030\n\020feasible_c"
      "omment\030\t \001(\t\022\027\n\017tlj_station_num\030\n \001(\r\022\025\n"
      "\rreal_end_time\030\013 \001(\r\"3\n\tTrainList\022\020\n\010tra"
      "in_id\030\001 \001(\004\022\024\n\014train_number\030\002 \001(\t\"B\n\016Dis"
      "patcherList\022\025\n\rdispatcher_id\030\001 \001(\004\022\031\n\021di"
      "spatcher_number\030\002 \001(\t\"K\n\010GroupMsg\022\020\n\010gro"
      "up_id\030\001 \001(\004\022\022\n\ngroup_name\030\002 \001(\t\022\031\n\021dispa"
      "tcher_leader\030\003 \001(\t\"S\n\010TrackMsg\022\020\n\010track_"
      "id\030\001 \001(\004\022\022\n\ntrack_name\030\002 \001(\t\022\017\n\007near_id\030"
      "\003 \001(\004\022\020\n\010near_end\030\004 \001(\r*O\n\016RegisterStatu"
      "e\022\023\n\017kUnknowRegister\020\000\022\024\n\020kSuccessRegist"
      "er\020\001\022\022\n\016kWrongRegister\020\002*q\n\013LoginResult\022"
      "\020\n\014kUnknowLogin\020\000\022\021\n\rkSuccessLogin\020\001\022\027\n\023"
      "kPasswordWrongLogin\020\002\022\020\n\014kNoUserLogin\020\003\022"
      "\022\n\016kOverTimeLogin\020\004*;\n\010FileType\022\023\n\017kUnkn"
      "owFileType\020\000\022\013\n\007kDbFile\020\001\022\r\n\tkSoftware\020\002"
      "*^\n\006Handle\022\021\n\rkUnknowHandle\020\000\022\010\n\004kAdd\020\001\022"
      "\013\n\007kReduce\020\002\022\016\n\nkTurnSouth\020\003\022\016\n\nkTurnNor"
      "th\020\004\022\n\n\006kStart\020\005*_\n\005State\022\021\n\rkUnknowStat"
      "ue\020\000\022\014\n\010kRunning\020\001\022\013\n\007kFinish\020\002\022\r\n\tkNotB"
      "egin\020\003\022\013\n\007kModify\020\004\022\014\n\010kExpired\020\005*[\n\rFea"
      "sibleLevel\022\023\n\017kUnknowFeasible\020\000\022\020\n\014Feasi"
      "ble_low\020\001\022\020\n\014Feasible_mid\020\002\022\021\n\rFeasible_"
      "high\020\003*\272\001\n\014ProgressItem\022\023\n\017kUnknowProgre"
      "ss\020\000\022\025\n\021kDispatcherReceve\020\001\022\026\n\022kDispatch"
      "erConfirm\020\002\022\021\n\rkDriverReceve\020\003\022\022\n\016kDrive"
      "rConfirm\020\004\022\022\n\016kWatcherReceve\020\005\022\023\n\017kWatch"
      "erConfirm\020\006\022\026\n\022kWatcherApplyRoute\020\007*D\n\016P"
      "rogressResult\022\031\n\025kUnknowProgressResult\020\000"
      "\022\014\n\010kSuccess\020\001\022\t\n\005kFail\020\002*E\n\rReceiveStat"
      "us\022\014\n\010kUnknown\020\000\022\014\n\010kReceive\020\001\022\014\n\010kConfi"
      "rm\020\002\022\n\n\006kWrong\020\003B\"\n\023com.lxkj.soms.protoB"
      "\013ProtoEntityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PublicType.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PublicType_2eproto

const ::google::protobuf::EnumDescriptor* RegisterStatue_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[0];
}
bool RegisterStatue_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginResult_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[1];
}
bool LoginResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FileType_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[2];
}
bool FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Handle_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[3];
}
bool Handle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* State_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[4];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FeasibleLevel_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[5];
}
bool FeasibleLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProgressItem_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[6];
}
bool ProgressItem_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProgressResult_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[7];
}
bool ProgressResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReceiveStatus_descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_enum_descriptors[8];
}
bool ReceiveStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectItem::kOrderNumFieldNumber;
const int ProjectItem::kTrackNameFieldNumber;
const int ProjectItem::kTrackIdFieldNumber;
const int ProjectItem::kHandleFieldNumber;
const int ProjectItem::kTrainNumFieldNumber;
const int ProjectItem::kStateFieldNumber;
const int ProjectItem::kTimeFieldNumber;
const int ProjectItem::kCommentFieldNumber;
const int ProjectItem::kFrontEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectItem::ProjectItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.ProjectItem)
}
ProjectItem::ProjectItem(const ProjectItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  track_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.track_name().size() > 0) {
    track_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_name_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  front_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.front_end().size() > 0) {
    front_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.front_end_);
  }
  ::memcpy(&order_num_, &from.order_num_,
    reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&order_num_) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:SOMS.ProjectItem)
}

void ProjectItem::SharedCtor() {
  track_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  front_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&order_num_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&order_num_) + sizeof(time_));
  _cached_size_ = 0;
}

ProjectItem::~ProjectItem() {
  // @@protoc_insertion_point(destructor:SOMS.ProjectItem)
  SharedDtor();
}

void ProjectItem::SharedDtor() {
  track_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  front_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectItem::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectItem& ProjectItem::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectItem* ProjectItem::New(::google::protobuf::Arena* arena) const {
  ProjectItem* n = new ProjectItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.ProjectItem)
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  front_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&order_num_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&order_num_) + sizeof(time_));
}

bool ProjectItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.ProjectItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string track_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_track_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->track_name().data(), this->track_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectItem.track_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 track_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.Handle handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_handle(static_cast< ::SOMS::Handle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 train_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &train_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.State state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::SOMS::State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectItem.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string front_end = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_front_end()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->front_end().data(), this->front_end().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectItem.front_end"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.ProjectItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.ProjectItem)
  return false;
#undef DO_
}

void ProjectItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.ProjectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_num = 1;
  if (this->order_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order_num(), output);
  }

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track_name().data(), this->track_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.track_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->track_name(), output);
  }

  // uint64 track_id = 3;
  if (this->track_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->track_id(), output);
  }

  // .SOMS.Handle handle = 4;
  if (this->handle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->handle(), output);
  }

  // uint32 train_num = 5;
  if (this->train_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->train_num(), output);
  }

  // .SOMS.State state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // uint32 time = 7;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->time(), output);
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->comment(), output);
  }

  // string front_end = 9;
  if (this->front_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->front_end().data(), this->front_end().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.front_end");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->front_end(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.ProjectItem)
}

::google::protobuf::uint8* ProjectItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.ProjectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_num = 1;
  if (this->order_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order_num(), target);
  }

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track_name().data(), this->track_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.track_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->track_name(), target);
  }

  // uint64 track_id = 3;
  if (this->track_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->track_id(), target);
  }

  // .SOMS.Handle handle = 4;
  if (this->handle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->handle(), target);
  }

  // uint32 train_num = 5;
  if (this->train_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->train_num(), target);
  }

  // .SOMS.State state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // uint32 time = 7;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->time(), target);
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->comment(), target);
  }

  // string front_end = 9;
  if (this->front_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->front_end().data(), this->front_end().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectItem.front_end");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->front_end(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.ProjectItem)
  return target;
}

size_t ProjectItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.ProjectItem)
  size_t total_size = 0;

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->track_name());
  }

  // string comment = 8;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // string front_end = 9;
  if (this->front_end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->front_end());
  }

  // uint32 order_num = 1;
  if (this->order_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_num());
  }

  // .SOMS.Handle handle = 4;
  if (this->handle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->handle());
  }

  // uint64 track_id = 3;
  if (this->track_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id());
  }

  // uint32 train_num = 5;
  if (this->train_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->train_num());
  }

  // .SOMS.State state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 time = 7;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.ProjectItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.ProjectItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.ProjectItem)
    MergeFrom(*source);
  }
}

void ProjectItem::MergeFrom(const ProjectItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.ProjectItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.track_name().size() > 0) {

    track_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_name_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.front_end().size() > 0) {

    front_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.front_end_);
  }
  if (from.order_num() != 0) {
    set_order_num(from.order_num());
  }
  if (from.handle() != 0) {
    set_handle(from.handle());
  }
  if (from.track_id() != 0) {
    set_track_id(from.track_id());
  }
  if (from.train_num() != 0) {
    set_train_num(from.train_num());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void ProjectItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.ProjectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectItem::CopyFrom(const ProjectItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.ProjectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectItem::IsInitialized() const {
  return true;
}

void ProjectItem::Swap(ProjectItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectItem::InternalSwap(ProjectItem* other) {
  track_name_.Swap(&other->track_name_);
  comment_.Swap(&other->comment_);
  front_end_.Swap(&other->front_end_);
  std::swap(order_num_, other->order_num_);
  std::swap(handle_, other->handle_);
  std::swap(track_id_, other->track_id_);
  std::swap(train_num_, other->train_num_);
  std::swap(state_, other->state_);
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectItem::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectItem

// uint32 order_num = 1;
void ProjectItem::clear_order_num() {
  order_num_ = 0u;
}
::google::protobuf::uint32 ProjectItem::order_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.order_num)
  return order_num_;
}
void ProjectItem::set_order_num(::google::protobuf::uint32 value) {
  
  order_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.order_num)
}

// string track_name = 2;
void ProjectItem::clear_track_name() {
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectItem::track_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.track_name)
  return track_name_.GetNoArena();
}
void ProjectItem::set_track_name(const ::std::string& value) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.track_name)
}
#if LANG_CXX11
void ProjectItem::set_track_name(::std::string&& value) {
  
  track_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.track_name)
}
#endif
void ProjectItem::set_track_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.track_name)
}
void ProjectItem::set_track_name(const char* value, size_t size) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.track_name)
}
::std::string* ProjectItem::mutable_track_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.track_name)
  return track_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectItem::release_track_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.track_name)
  
  return track_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectItem::set_allocated_track_name(::std::string* track_name) {
  if (track_name != NULL) {
    
  } else {
    
  }
  track_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), track_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.track_name)
}

// uint64 track_id = 3;
void ProjectItem::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ProjectItem::track_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.track_id)
  return track_id_;
}
void ProjectItem::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.track_id)
}

// .SOMS.Handle handle = 4;
void ProjectItem::clear_handle() {
  handle_ = 0;
}
::SOMS::Handle ProjectItem::handle() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.handle)
  return static_cast< ::SOMS::Handle >(handle_);
}
void ProjectItem::set_handle(::SOMS::Handle value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.handle)
}

// uint32 train_num = 5;
void ProjectItem::clear_train_num() {
  train_num_ = 0u;
}
::google::protobuf::uint32 ProjectItem::train_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.train_num)
  return train_num_;
}
void ProjectItem::set_train_num(::google::protobuf::uint32 value) {
  
  train_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.train_num)
}

// .SOMS.State state = 6;
void ProjectItem::clear_state() {
  state_ = 0;
}
::SOMS::State ProjectItem::state() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.state)
  return static_cast< ::SOMS::State >(state_);
}
void ProjectItem::set_state(::SOMS::State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.state)
}

// uint32 time = 7;
void ProjectItem::clear_time() {
  time_ = 0u;
}
::google::protobuf::uint32 ProjectItem::time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.time)
  return time_;
}
void ProjectItem::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.time)
}

// string comment = 8;
void ProjectItem::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectItem::comment() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.comment)
  return comment_.GetNoArena();
}
void ProjectItem::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.comment)
}
#if LANG_CXX11
void ProjectItem::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.comment)
}
#endif
void ProjectItem::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.comment)
}
void ProjectItem::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.comment)
}
::std::string* ProjectItem::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectItem::release_comment() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectItem::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.comment)
}

// string front_end = 9;
void ProjectItem::clear_front_end() {
  front_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectItem::front_end() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectItem.front_end)
  return front_end_.GetNoArena();
}
void ProjectItem::set_front_end(const ::std::string& value) {
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectItem.front_end)
}
#if LANG_CXX11
void ProjectItem::set_front_end(::std::string&& value) {
  
  front_end_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectItem.front_end)
}
#endif
void ProjectItem::set_front_end(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectItem.front_end)
}
void ProjectItem::set_front_end(const char* value, size_t size) {
  
  front_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectItem.front_end)
}
::std::string* ProjectItem::mutable_front_end() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectItem.front_end)
  return front_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectItem::release_front_end() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectItem.front_end)
  
  return front_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectItem::set_allocated_front_end(::std::string* front_end) {
  if (front_end != NULL) {
    
  } else {
    
  }
  front_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), front_end);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectItem.front_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectMsg::kProjectIdFieldNumber;
const int ProjectMsg::kProjectItemFieldNumber;
const int ProjectMsg::kTrainIdFieldNumber;
const int ProjectMsg::kBeginTimeFieldNumber;
const int ProjectMsg::kEndTimeFieldNumber;
const int ProjectMsg::kDispatcherIdFieldNumber;
const int ProjectMsg::kTljStationNumFieldNumber;
const int ProjectMsg::kDispatcherNameFieldNumber;
const int ProjectMsg::kTrainNameFieldNumber;
const int ProjectMsg::kProjectNameFieldNumber;
const int ProjectMsg::kParentProjectIdFieldNumber;
const int ProjectMsg::kProjectContentFieldNumber;
const int ProjectMsg::kGroupMsgFieldNumber;
const int ProjectMsg::kSwticherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectMsg::ProjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.ProjectMsg)
}
ProjectMsg::ProjectMsg(const ProjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      project_item_(from.project_item_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  dispatcher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dispatcher_id().size() > 0) {
    dispatcher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_id_);
  }
  dispatcher_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dispatcher_name().size() > 0) {
    dispatcher_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_name_);
  }
  train_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.train_name().size() > 0) {
    train_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.train_name_);
  }
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_name().size() > 0) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  parent_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_project_id().size() > 0) {
    parent_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_project_id_);
  }
  project_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_content().size() > 0) {
    project_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_content_);
  }
  swticher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.swticher().size() > 0) {
    swticher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swticher_);
  }
  if (from.has_group_msg()) {
    group_msg_ = new ::SOMS::GroupMsg(*from.group_msg_);
  } else {
    group_msg_ = NULL;
  }
  ::memcpy(&train_id_, &from.train_id_,
    reinterpret_cast<char*>(&tlj_station_num_) -
    reinterpret_cast<char*>(&train_id_) + sizeof(tlj_station_num_));
  // @@protoc_insertion_point(copy_constructor:SOMS.ProjectMsg)
}

void ProjectMsg::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  train_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swticher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_msg_, 0, reinterpret_cast<char*>(&tlj_station_num_) -
    reinterpret_cast<char*>(&group_msg_) + sizeof(tlj_station_num_));
  _cached_size_ = 0;
}

ProjectMsg::~ProjectMsg() {
  // @@protoc_insertion_point(destructor:SOMS.ProjectMsg)
  SharedDtor();
}

void ProjectMsg::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  train_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swticher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete group_msg_;
  }
}

void ProjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectMsg::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectMsg& ProjectMsg::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProjectMsg* ProjectMsg::New(::google::protobuf::Arena* arena) const {
  ProjectMsg* n = new ProjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.ProjectMsg)
  project_item_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  train_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swticher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && group_msg_ != NULL) {
    delete group_msg_;
  }
  group_msg_ = NULL;
  ::memset(&train_id_, 0, reinterpret_cast<char*>(&tlj_station_num_) -
    reinterpret_cast<char*>(&train_id_) + sizeof(tlj_station_num_));
}

bool ProjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.ProjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), this->project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SOMS.ProjectItem project_item = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_project_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 train_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &train_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 begin_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dispatcher_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispatcher_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dispatcher_id().data(), this->dispatcher_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.dispatcher_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tlj_station_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tlj_station_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dispatcher_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispatcher_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dispatcher_name().data(), this->dispatcher_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.dispatcher_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string train_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_train_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->train_name().data(), this->train_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.train_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.project_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_project_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_project_id().data(), this->parent_project_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.parent_project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_content = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_content().data(), this->project_content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.project_content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.GroupMsg group_msg = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string swticher = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swticher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->swticher().data(), this->swticher().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.ProjectMsg.swticher"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.ProjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.ProjectMsg)
  return false;
#undef DO_
}

void ProjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.ProjectMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // repeated .SOMS.ProjectItem project_item = 2;
  for (unsigned int i = 0, n = this->project_item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->project_item(i), output);
  }

  // uint64 train_id = 3;
  if (this->train_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->train_id(), output);
  }

  // uint32 begin_time = 4;
  if (this->begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->begin_time(), output);
  }

  // uint32 end_time = 5;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->end_time(), output);
  }

  // string dispatcher_id = 6;
  if (this->dispatcher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_id().data(), this->dispatcher_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.dispatcher_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dispatcher_id(), output);
  }

  // uint32 tlj_station_num = 7;
  if (this->tlj_station_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->tlj_station_num(), output);
  }

  // string dispatcher_name = 8;
  if (this->dispatcher_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_name().data(), this->dispatcher_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.dispatcher_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->dispatcher_name(), output);
  }

  // string train_name = 9;
  if (this->train_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_name().data(), this->train_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.train_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->train_name(), output);
  }

  // string project_name = 10;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->project_name(), output);
  }

  // string parent_project_id = 11;
  if (this->parent_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_project_id().data(), this->parent_project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.parent_project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->parent_project_id(), output);
  }

  // string project_content = 12;
  if (this->project_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_content().data(), this->project_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->project_content(), output);
  }

  // .SOMS.GroupMsg group_msg = 13;
  if (this->has_group_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->group_msg_, output);
  }

  // string swticher = 14;
  if (this->swticher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swticher().data(), this->swticher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.swticher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->swticher(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.ProjectMsg)
}

::google::protobuf::uint8* ProjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.ProjectMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), this->project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // repeated .SOMS.ProjectItem project_item = 2;
  for (unsigned int i = 0, n = this->project_item_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->project_item(i), deterministic, target);
  }

  // uint64 train_id = 3;
  if (this->train_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->train_id(), target);
  }

  // uint32 begin_time = 4;
  if (this->begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->begin_time(), target);
  }

  // uint32 end_time = 5;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->end_time(), target);
  }

  // string dispatcher_id = 6;
  if (this->dispatcher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_id().data(), this->dispatcher_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.dispatcher_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dispatcher_id(), target);
  }

  // uint32 tlj_station_num = 7;
  if (this->tlj_station_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->tlj_station_num(), target);
  }

  // string dispatcher_name = 8;
  if (this->dispatcher_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_name().data(), this->dispatcher_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.dispatcher_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->dispatcher_name(), target);
  }

  // string train_name = 9;
  if (this->train_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_name().data(), this->train_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.train_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->train_name(), target);
  }

  // string project_name = 10;
  if (this->project_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->project_name(), target);
  }

  // string parent_project_id = 11;
  if (this->parent_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_project_id().data(), this->parent_project_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.parent_project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->parent_project_id(), target);
  }

  // string project_content = 12;
  if (this->project_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_content().data(), this->project_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.project_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->project_content(), target);
  }

  // .SOMS.GroupMsg group_msg = 13;
  if (this->has_group_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->group_msg_, deterministic, target);
  }

  // string swticher = 14;
  if (this->swticher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swticher().data(), this->swticher().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.ProjectMsg.swticher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->swticher(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.ProjectMsg)
  return target;
}

size_t ProjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.ProjectMsg)
  size_t total_size = 0;

  // repeated .SOMS.ProjectItem project_item = 2;
  {
    unsigned int count = this->project_item_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project_item(i));
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string dispatcher_id = 6;
  if (this->dispatcher_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dispatcher_id());
  }

  // string dispatcher_name = 8;
  if (this->dispatcher_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dispatcher_name());
  }

  // string train_name = 9;
  if (this->train_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->train_name());
  }

  // string project_name = 10;
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_name());
  }

  // string parent_project_id = 11;
  if (this->parent_project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_project_id());
  }

  // string project_content = 12;
  if (this->project_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_content());
  }

  // string swticher = 14;
  if (this->swticher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->swticher());
  }

  // .SOMS.GroupMsg group_msg = 13;
  if (this->has_group_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_msg_);
  }

  // uint64 train_id = 3;
  if (this->train_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->train_id());
  }

  // uint32 begin_time = 4;
  if (this->begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());
  }

  // uint32 end_time = 5;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  // uint32 tlj_station_num = 7;
  if (this->tlj_station_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tlj_station_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.ProjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.ProjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.ProjectMsg)
    MergeFrom(*source);
  }
}

void ProjectMsg::MergeFrom(const ProjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.ProjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  project_item_.MergeFrom(from.project_item_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.dispatcher_id().size() > 0) {

    dispatcher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_id_);
  }
  if (from.dispatcher_name().size() > 0) {

    dispatcher_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_name_);
  }
  if (from.train_name().size() > 0) {

    train_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.train_name_);
  }
  if (from.project_name().size() > 0) {

    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  if (from.parent_project_id().size() > 0) {

    parent_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_project_id_);
  }
  if (from.project_content().size() > 0) {

    project_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_content_);
  }
  if (from.swticher().size() > 0) {

    swticher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swticher_);
  }
  if (from.has_group_msg()) {
    mutable_group_msg()->::SOMS::GroupMsg::MergeFrom(from.group_msg());
  }
  if (from.train_id() != 0) {
    set_train_id(from.train_id());
  }
  if (from.begin_time() != 0) {
    set_begin_time(from.begin_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.tlj_station_num() != 0) {
    set_tlj_station_num(from.tlj_station_num());
  }
}

void ProjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.ProjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectMsg::CopyFrom(const ProjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.ProjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectMsg::IsInitialized() const {
  return true;
}

void ProjectMsg::Swap(ProjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectMsg::InternalSwap(ProjectMsg* other) {
  project_item_.InternalSwap(&other->project_item_);
  project_id_.Swap(&other->project_id_);
  dispatcher_id_.Swap(&other->dispatcher_id_);
  dispatcher_name_.Swap(&other->dispatcher_name_);
  train_name_.Swap(&other->train_name_);
  project_name_.Swap(&other->project_name_);
  parent_project_id_.Swap(&other->parent_project_id_);
  project_content_.Swap(&other->project_content_);
  swticher_.Swap(&other->swticher_);
  std::swap(group_msg_, other->group_msg_);
  std::swap(train_id_, other->train_id_);
  std::swap(begin_time_, other->begin_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(tlj_station_num_, other->tlj_station_num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectMsg::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectMsg

// string project_id = 1;
void ProjectMsg::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::project_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_id)
  return project_id_.GetNoArena();
}
void ProjectMsg::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_id)
}
#if LANG_CXX11
void ProjectMsg::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_id)
}
#endif
void ProjectMsg::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_id)
}
void ProjectMsg::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_id)
}
::std::string* ProjectMsg::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_project_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_id)
}

// repeated .SOMS.ProjectItem project_item = 2;
int ProjectMsg::project_item_size() const {
  return project_item_.size();
}
void ProjectMsg::clear_project_item() {
  project_item_.Clear();
}
const ::SOMS::ProjectItem& ProjectMsg::project_item(int index) const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_item)
  return project_item_.Get(index);
}
::SOMS::ProjectItem* ProjectMsg::mutable_project_item(int index) {
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_item)
  return project_item_.Mutable(index);
}
::SOMS::ProjectItem* ProjectMsg::add_project_item() {
  // @@protoc_insertion_point(field_add:SOMS.ProjectMsg.project_item)
  return project_item_.Add();
}
::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >*
ProjectMsg::mutable_project_item() {
  // @@protoc_insertion_point(field_mutable_list:SOMS.ProjectMsg.project_item)
  return &project_item_;
}
const ::google::protobuf::RepeatedPtrField< ::SOMS::ProjectItem >&
ProjectMsg::project_item() const {
  // @@protoc_insertion_point(field_list:SOMS.ProjectMsg.project_item)
  return project_item_;
}

// uint64 train_id = 3;
void ProjectMsg::clear_train_id() {
  train_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ProjectMsg::train_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.train_id)
  return train_id_;
}
void ProjectMsg::set_train_id(::google::protobuf::uint64 value) {
  
  train_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.train_id)
}

// uint32 begin_time = 4;
void ProjectMsg::clear_begin_time() {
  begin_time_ = 0u;
}
::google::protobuf::uint32 ProjectMsg::begin_time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.begin_time)
  return begin_time_;
}
void ProjectMsg::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.begin_time)
}

// uint32 end_time = 5;
void ProjectMsg::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 ProjectMsg::end_time() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.end_time)
  return end_time_;
}
void ProjectMsg::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.end_time)
}

// string dispatcher_id = 6;
void ProjectMsg::clear_dispatcher_id() {
  dispatcher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::dispatcher_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.dispatcher_id)
  return dispatcher_id_.GetNoArena();
}
void ProjectMsg::set_dispatcher_id(const ::std::string& value) {
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.dispatcher_id)
}
#if LANG_CXX11
void ProjectMsg::set_dispatcher_id(::std::string&& value) {
  
  dispatcher_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.dispatcher_id)
}
#endif
void ProjectMsg::set_dispatcher_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.dispatcher_id)
}
void ProjectMsg::set_dispatcher_id(const char* value, size_t size) {
  
  dispatcher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.dispatcher_id)
}
::std::string* ProjectMsg::mutable_dispatcher_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.dispatcher_id)
  return dispatcher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_dispatcher_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.dispatcher_id)
  
  return dispatcher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_dispatcher_id(::std::string* dispatcher_id) {
  if (dispatcher_id != NULL) {
    
  } else {
    
  }
  dispatcher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.dispatcher_id)
}

// uint32 tlj_station_num = 7;
void ProjectMsg::clear_tlj_station_num() {
  tlj_station_num_ = 0u;
}
::google::protobuf::uint32 ProjectMsg::tlj_station_num() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.tlj_station_num)
  return tlj_station_num_;
}
void ProjectMsg::set_tlj_station_num(::google::protobuf::uint32 value) {
  
  tlj_station_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.tlj_station_num)
}

// string dispatcher_name = 8;
void ProjectMsg::clear_dispatcher_name() {
  dispatcher_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::dispatcher_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.dispatcher_name)
  return dispatcher_name_.GetNoArena();
}
void ProjectMsg::set_dispatcher_name(const ::std::string& value) {
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.dispatcher_name)
}
#if LANG_CXX11
void ProjectMsg::set_dispatcher_name(::std::string&& value) {
  
  dispatcher_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.dispatcher_name)
}
#endif
void ProjectMsg::set_dispatcher_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.dispatcher_name)
}
void ProjectMsg::set_dispatcher_name(const char* value, size_t size) {
  
  dispatcher_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.dispatcher_name)
}
::std::string* ProjectMsg::mutable_dispatcher_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.dispatcher_name)
  return dispatcher_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_dispatcher_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.dispatcher_name)
  
  return dispatcher_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_dispatcher_name(::std::string* dispatcher_name) {
  if (dispatcher_name != NULL) {
    
  } else {
    
  }
  dispatcher_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.dispatcher_name)
}

// string train_name = 9;
void ProjectMsg::clear_train_name() {
  train_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::train_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.train_name)
  return train_name_.GetNoArena();
}
void ProjectMsg::set_train_name(const ::std::string& value) {
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.train_name)
}
#if LANG_CXX11
void ProjectMsg::set_train_name(::std::string&& value) {
  
  train_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.train_name)
}
#endif
void ProjectMsg::set_train_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.train_name)
}
void ProjectMsg::set_train_name(const char* value, size_t size) {
  
  train_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.train_name)
}
::std::string* ProjectMsg::mutable_train_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.train_name)
  return train_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_train_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.train_name)
  
  return train_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_train_name(::std::string* train_name) {
  if (train_name != NULL) {
    
  } else {
    
  }
  train_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), train_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.train_name)
}

// string project_name = 10;
void ProjectMsg::clear_project_name() {
  project_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::project_name() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_name)
  return project_name_.GetNoArena();
}
void ProjectMsg::set_project_name(const ::std::string& value) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_name)
}
#if LANG_CXX11
void ProjectMsg::set_project_name(::std::string&& value) {
  
  project_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_name)
}
#endif
void ProjectMsg::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_name)
}
void ProjectMsg::set_project_name(const char* value, size_t size) {
  
  project_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_name)
}
::std::string* ProjectMsg::mutable_project_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_name)
  return project_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_project_name() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_name)
  
  return project_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_project_name(::std::string* project_name) {
  if (project_name != NULL) {
    
  } else {
    
  }
  project_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_name)
}

// string parent_project_id = 11;
void ProjectMsg::clear_parent_project_id() {
  parent_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::parent_project_id() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.parent_project_id)
  return parent_project_id_.GetNoArena();
}
void ProjectMsg::set_parent_project_id(const ::std::string& value) {
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.parent_project_id)
}
#if LANG_CXX11
void ProjectMsg::set_parent_project_id(::std::string&& value) {
  
  parent_project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.parent_project_id)
}
#endif
void ProjectMsg::set_parent_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.parent_project_id)
}
void ProjectMsg::set_parent_project_id(const char* value, size_t size) {
  
  parent_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.parent_project_id)
}
::std::string* ProjectMsg::mutable_parent_project_id() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.parent_project_id)
  return parent_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_parent_project_id() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.parent_project_id)
  
  return parent_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_parent_project_id(::std::string* parent_project_id) {
  if (parent_project_id != NULL) {
    
  } else {
    
  }
  parent_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_project_id);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.parent_project_id)
}

// string project_content = 12;
void ProjectMsg::clear_project_content() {
  project_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::project_content() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.project_content)
  return project_content_.GetNoArena();
}
void ProjectMsg::set_project_content(const ::std::string& value) {
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.project_content)
}
#if LANG_CXX11
void ProjectMsg::set_project_content(::std::string&& value) {
  
  project_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.project_content)
}
#endif
void ProjectMsg::set_project_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.project_content)
}
void ProjectMsg::set_project_content(const char* value, size_t size) {
  
  project_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.project_content)
}
::std::string* ProjectMsg::mutable_project_content() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.project_content)
  return project_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_project_content() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.project_content)
  
  return project_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_project_content(::std::string* project_content) {
  if (project_content != NULL) {
    
  } else {
    
  }
  project_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_content);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.project_content)
}

// .SOMS.GroupMsg group_msg = 13;
bool ProjectMsg::has_group_msg() const {
  return this != internal_default_instance() && group_msg_ != NULL;
}
void ProjectMsg::clear_group_msg() {
  if (GetArenaNoVirtual() == NULL && group_msg_ != NULL) delete group_msg_;
  group_msg_ = NULL;
}
const ::SOMS::GroupMsg& ProjectMsg::group_msg() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.group_msg)
  return group_msg_ != NULL ? *group_msg_
                         : *::SOMS::GroupMsg::internal_default_instance();
}
::SOMS::GroupMsg* ProjectMsg::mutable_group_msg() {
  
  if (group_msg_ == NULL) {
    group_msg_ = new ::SOMS::GroupMsg;
  }
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.group_msg)
  return group_msg_;
}
::SOMS::GroupMsg* ProjectMsg::release_group_msg() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.group_msg)
  
  ::SOMS::GroupMsg* temp = group_msg_;
  group_msg_ = NULL;
  return temp;
}
void ProjectMsg::set_allocated_group_msg(::SOMS::GroupMsg* group_msg) {
  delete group_msg_;
  group_msg_ = group_msg;
  if (group_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.group_msg)
}

// string swticher = 14;
void ProjectMsg::clear_swticher() {
  swticher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectMsg::swticher() const {
  // @@protoc_insertion_point(field_get:SOMS.ProjectMsg.swticher)
  return swticher_.GetNoArena();
}
void ProjectMsg::set_swticher(const ::std::string& value) {
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.ProjectMsg.swticher)
}
#if LANG_CXX11
void ProjectMsg::set_swticher(::std::string&& value) {
  
  swticher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.ProjectMsg.swticher)
}
#endif
void ProjectMsg::set_swticher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.ProjectMsg.swticher)
}
void ProjectMsg::set_swticher(const char* value, size_t size) {
  
  swticher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.ProjectMsg.swticher)
}
::std::string* ProjectMsg::mutable_swticher() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.ProjectMsg.swticher)
  return swticher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectMsg::release_swticher() {
  // @@protoc_insertion_point(field_release:SOMS.ProjectMsg.swticher)
  
  return swticher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectMsg::set_allocated_swticher(::std::string* swticher) {
  if (swticher != NULL) {
    
  } else {
    
  }
  swticher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swticher);
  // @@protoc_insertion_point(field_set_allocated:SOMS.ProjectMsg.swticher)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcvProgressMsg::kProgressItemFieldNumber;
const int RcvProgressMsg::kProgressResultFieldNumber;
const int RcvProgressMsg::kProgressTimeFieldNumber;
const int RcvProgressMsg::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcvProgressMsg::RcvProgressMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.RcvProgressMsg)
}
RcvProgressMsg::RcvProgressMsg(const RcvProgressMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&progress_item_, &from.progress_item_,
    reinterpret_cast<char*>(&progress_time_) -
    reinterpret_cast<char*>(&progress_item_) + sizeof(progress_time_));
  // @@protoc_insertion_point(copy_constructor:SOMS.RcvProgressMsg)
}

void RcvProgressMsg::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&progress_item_, 0, reinterpret_cast<char*>(&progress_time_) -
    reinterpret_cast<char*>(&progress_item_) + sizeof(progress_time_));
  _cached_size_ = 0;
}

RcvProgressMsg::~RcvProgressMsg() {
  // @@protoc_insertion_point(destructor:SOMS.RcvProgressMsg)
  SharedDtor();
}

void RcvProgressMsg::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RcvProgressMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcvProgressMsg::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcvProgressMsg& RcvProgressMsg::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcvProgressMsg* RcvProgressMsg::New(::google::protobuf::Arena* arena) const {
  RcvProgressMsg* n = new RcvProgressMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcvProgressMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.RcvProgressMsg)
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&progress_item_, 0, reinterpret_cast<char*>(&progress_time_) -
    reinterpret_cast<char*>(&progress_item_) + sizeof(progress_time_));
}

bool RcvProgressMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.RcvProgressMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SOMS.ProgressItem progress_item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_progress_item(static_cast< ::SOMS::ProgressItem >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.ProgressResult progress_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_progress_result(static_cast< ::SOMS::ProgressResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.RcvProgressMsg.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.RcvProgressMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.RcvProgressMsg)
  return false;
#undef DO_
}

void RcvProgressMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.RcvProgressMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SOMS.ProgressItem progress_item = 1;
  if (this->progress_item() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->progress_item(), output);
  }

  // .SOMS.ProgressResult progress_result = 2;
  if (this->progress_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->progress_result(), output);
  }

  // uint32 progress_time = 3;
  if (this->progress_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->progress_time(), output);
  }

  // string comment = 4;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.RcvProgressMsg.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->comment(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.RcvProgressMsg)
}

::google::protobuf::uint8* RcvProgressMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.RcvProgressMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SOMS.ProgressItem progress_item = 1;
  if (this->progress_item() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->progress_item(), target);
  }

  // .SOMS.ProgressResult progress_result = 2;
  if (this->progress_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->progress_result(), target);
  }

  // uint32 progress_time = 3;
  if (this->progress_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->progress_time(), target);
  }

  // string comment = 4;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.RcvProgressMsg.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->comment(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.RcvProgressMsg)
  return target;
}

size_t RcvProgressMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.RcvProgressMsg)
  size_t total_size = 0;

  // string comment = 4;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // .SOMS.ProgressItem progress_item = 1;
  if (this->progress_item() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->progress_item());
  }

  // .SOMS.ProgressResult progress_result = 2;
  if (this->progress_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->progress_result());
  }

  // uint32 progress_time = 3;
  if (this->progress_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcvProgressMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.RcvProgressMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RcvProgressMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcvProgressMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.RcvProgressMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.RcvProgressMsg)
    MergeFrom(*source);
  }
}

void RcvProgressMsg::MergeFrom(const RcvProgressMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.RcvProgressMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.progress_item() != 0) {
    set_progress_item(from.progress_item());
  }
  if (from.progress_result() != 0) {
    set_progress_result(from.progress_result());
  }
  if (from.progress_time() != 0) {
    set_progress_time(from.progress_time());
  }
}

void RcvProgressMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.RcvProgressMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcvProgressMsg::CopyFrom(const RcvProgressMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.RcvProgressMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcvProgressMsg::IsInitialized() const {
  return true;
}

void RcvProgressMsg::Swap(RcvProgressMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcvProgressMsg::InternalSwap(RcvProgressMsg* other) {
  comment_.Swap(&other->comment_);
  std::swap(progress_item_, other->progress_item_);
  std::swap(progress_result_, other->progress_result_);
  std::swap(progress_time_, other->progress_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcvProgressMsg::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcvProgressMsg

// .SOMS.ProgressItem progress_item = 1;
void RcvProgressMsg::clear_progress_item() {
  progress_item_ = 0;
}
::SOMS::ProgressItem RcvProgressMsg::progress_item() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_item)
  return static_cast< ::SOMS::ProgressItem >(progress_item_);
}
void RcvProgressMsg::set_progress_item(::SOMS::ProgressItem value) {
  
  progress_item_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_item)
}

// .SOMS.ProgressResult progress_result = 2;
void RcvProgressMsg::clear_progress_result() {
  progress_result_ = 0;
}
::SOMS::ProgressResult RcvProgressMsg::progress_result() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_result)
  return static_cast< ::SOMS::ProgressResult >(progress_result_);
}
void RcvProgressMsg::set_progress_result(::SOMS::ProgressResult value) {
  
  progress_result_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_result)
}

// uint32 progress_time = 3;
void RcvProgressMsg::clear_progress_time() {
  progress_time_ = 0u;
}
::google::protobuf::uint32 RcvProgressMsg::progress_time() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.progress_time)
  return progress_time_;
}
void RcvProgressMsg::set_progress_time(::google::protobuf::uint32 value) {
  
  progress_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.progress_time)
}

// string comment = 4;
void RcvProgressMsg::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RcvProgressMsg::comment() const {
  // @@protoc_insertion_point(field_get:SOMS.RcvProgressMsg.comment)
  return comment_.GetNoArena();
}
void RcvProgressMsg::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.RcvProgressMsg.comment)
}
#if LANG_CXX11
void RcvProgressMsg::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.RcvProgressMsg.comment)
}
#endif
void RcvProgressMsg::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.RcvProgressMsg.comment)
}
void RcvProgressMsg::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.RcvProgressMsg.comment)
}
::std::string* RcvProgressMsg::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.RcvProgressMsg.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcvProgressMsg::release_comment() {
  // @@protoc_insertion_point(field_release:SOMS.RcvProgressMsg.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcvProgressMsg::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.RcvProgressMsg.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllProjectData::kProjectMsgFieldNumber;
const int AllProjectData::kProjectStatueFieldNumber;
const int AllProjectData::kCreateTimeFieldNumber;
const int AllProjectData::kRealBeginTimeFieldNumber;
const int AllProjectData::kKeepTimeFieldNumber;
const int AllProjectData::kRateNumFieldNumber;
const int AllProjectData::kRcvprogressMsgFieldNumber;
const int AllProjectData::kLevelFieldNumber;
const int AllProjectData::kFeasibleCommentFieldNumber;
const int AllProjectData::kTljStationNumFieldNumber;
const int AllProjectData::kRealEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllProjectData::AllProjectData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.AllProjectData)
}
AllProjectData::AllProjectData(const AllProjectData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rcvprogress_msg_(from.rcvprogress_msg_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feasible_comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.feasible_comment().size() > 0) {
    feasible_comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feasible_comment_);
  }
  if (from.has_project_msg()) {
    project_msg_ = new ::SOMS::ProjectMsg(*from.project_msg_);
  } else {
    project_msg_ = NULL;
  }
  ::memcpy(&project_statue_, &from.project_statue_,
    reinterpret_cast<char*>(&real_end_time_) -
    reinterpret_cast<char*>(&project_statue_) + sizeof(real_end_time_));
  // @@protoc_insertion_point(copy_constructor:SOMS.AllProjectData)
}

void AllProjectData::SharedCtor() {
  feasible_comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&project_msg_, 0, reinterpret_cast<char*>(&real_end_time_) -
    reinterpret_cast<char*>(&project_msg_) + sizeof(real_end_time_));
  _cached_size_ = 0;
}

AllProjectData::~AllProjectData() {
  // @@protoc_insertion_point(destructor:SOMS.AllProjectData)
  SharedDtor();
}

void AllProjectData::SharedDtor() {
  feasible_comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete project_msg_;
  }
}

void AllProjectData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllProjectData::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllProjectData& AllProjectData::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllProjectData* AllProjectData::New(::google::protobuf::Arena* arena) const {
  AllProjectData* n = new AllProjectData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllProjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.AllProjectData)
  rcvprogress_msg_.Clear();
  feasible_comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && project_msg_ != NULL) {
    delete project_msg_;
  }
  project_msg_ = NULL;
  ::memset(&project_statue_, 0, reinterpret_cast<char*>(&real_end_time_) -
    reinterpret_cast<char*>(&project_statue_) + sizeof(real_end_time_));
}

bool AllProjectData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.AllProjectData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SOMS.ProjectMsg project_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.State project_statue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_project_statue(static_cast< ::SOMS::State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 create_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 real_begin_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &real_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 keep_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keep_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rate_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rate_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rcvprogress_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SOMS.FeasibleLevel level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level(static_cast< ::SOMS::FeasibleLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string feasible_comment = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feasible_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->feasible_comment().data(), this->feasible_comment().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.AllProjectData.feasible_comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tlj_station_num = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tlj_station_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 real_end_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &real_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.AllProjectData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.AllProjectData)
  return false;
#undef DO_
}

void AllProjectData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.AllProjectData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SOMS.ProjectMsg project_msg = 1;
  if (this->has_project_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->project_msg_, output);
  }

  // .SOMS.State project_statue = 2;
  if (this->project_statue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->project_statue(), output);
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->create_time(), output);
  }

  // uint32 real_begin_time = 4;
  if (this->real_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->real_begin_time(), output);
  }

  // uint32 keep_time = 5;
  if (this->keep_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->keep_time(), output);
  }

  // uint32 rate_num = 6;
  if (this->rate_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rate_num(), output);
  }

  // repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
  for (unsigned int i = 0, n = this->rcvprogress_msg_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rcvprogress_msg(i), output);
  }

  // .SOMS.FeasibleLevel level = 8;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->level(), output);
  }

  // string feasible_comment = 9;
  if (this->feasible_comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feasible_comment().data(), this->feasible_comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.AllProjectData.feasible_comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->feasible_comment(), output);
  }

  // uint32 tlj_station_num = 10;
  if (this->tlj_station_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->tlj_station_num(), output);
  }

  // uint32 real_end_time = 11;
  if (this->real_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->real_end_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.AllProjectData)
}

::google::protobuf::uint8* AllProjectData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.AllProjectData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SOMS.ProjectMsg project_msg = 1;
  if (this->has_project_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->project_msg_, deterministic, target);
  }

  // .SOMS.State project_statue = 2;
  if (this->project_statue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->project_statue(), target);
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->create_time(), target);
  }

  // uint32 real_begin_time = 4;
  if (this->real_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->real_begin_time(), target);
  }

  // uint32 keep_time = 5;
  if (this->keep_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->keep_time(), target);
  }

  // uint32 rate_num = 6;
  if (this->rate_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rate_num(), target);
  }

  // repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
  for (unsigned int i = 0, n = this->rcvprogress_msg_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->rcvprogress_msg(i), deterministic, target);
  }

  // .SOMS.FeasibleLevel level = 8;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->level(), target);
  }

  // string feasible_comment = 9;
  if (this->feasible_comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feasible_comment().data(), this->feasible_comment().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.AllProjectData.feasible_comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->feasible_comment(), target);
  }

  // uint32 tlj_station_num = 10;
  if (this->tlj_station_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->tlj_station_num(), target);
  }

  // uint32 real_end_time = 11;
  if (this->real_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->real_end_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.AllProjectData)
  return target;
}

size_t AllProjectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.AllProjectData)
  size_t total_size = 0;

  // repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
  {
    unsigned int count = this->rcvprogress_msg_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rcvprogress_msg(i));
    }
  }

  // string feasible_comment = 9;
  if (this->feasible_comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->feasible_comment());
  }

  // .SOMS.ProjectMsg project_msg = 1;
  if (this->has_project_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->project_msg_);
  }

  // .SOMS.State project_statue = 2;
  if (this->project_statue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->project_statue());
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // uint32 real_begin_time = 4;
  if (this->real_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->real_begin_time());
  }

  // uint32 keep_time = 5;
  if (this->keep_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->keep_time());
  }

  // uint32 rate_num = 6;
  if (this->rate_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rate_num());
  }

  // .SOMS.FeasibleLevel level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level());
  }

  // uint32 tlj_station_num = 10;
  if (this->tlj_station_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tlj_station_num());
  }

  // uint32 real_end_time = 11;
  if (this->real_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->real_end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllProjectData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.AllProjectData)
  GOOGLE_DCHECK_NE(&from, this);
  const AllProjectData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllProjectData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.AllProjectData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.AllProjectData)
    MergeFrom(*source);
  }
}

void AllProjectData::MergeFrom(const AllProjectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.AllProjectData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rcvprogress_msg_.MergeFrom(from.rcvprogress_msg_);
  if (from.feasible_comment().size() > 0) {

    feasible_comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feasible_comment_);
  }
  if (from.has_project_msg()) {
    mutable_project_msg()->::SOMS::ProjectMsg::MergeFrom(from.project_msg());
  }
  if (from.project_statue() != 0) {
    set_project_statue(from.project_statue());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.real_begin_time() != 0) {
    set_real_begin_time(from.real_begin_time());
  }
  if (from.keep_time() != 0) {
    set_keep_time(from.keep_time());
  }
  if (from.rate_num() != 0) {
    set_rate_num(from.rate_num());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.tlj_station_num() != 0) {
    set_tlj_station_num(from.tlj_station_num());
  }
  if (from.real_end_time() != 0) {
    set_real_end_time(from.real_end_time());
  }
}

void AllProjectData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.AllProjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllProjectData::CopyFrom(const AllProjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.AllProjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllProjectData::IsInitialized() const {
  return true;
}

void AllProjectData::Swap(AllProjectData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllProjectData::InternalSwap(AllProjectData* other) {
  rcvprogress_msg_.InternalSwap(&other->rcvprogress_msg_);
  feasible_comment_.Swap(&other->feasible_comment_);
  std::swap(project_msg_, other->project_msg_);
  std::swap(project_statue_, other->project_statue_);
  std::swap(create_time_, other->create_time_);
  std::swap(real_begin_time_, other->real_begin_time_);
  std::swap(keep_time_, other->keep_time_);
  std::swap(rate_num_, other->rate_num_);
  std::swap(level_, other->level_);
  std::swap(tlj_station_num_, other->tlj_station_num_);
  std::swap(real_end_time_, other->real_end_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllProjectData::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllProjectData

// .SOMS.ProjectMsg project_msg = 1;
bool AllProjectData::has_project_msg() const {
  return this != internal_default_instance() && project_msg_ != NULL;
}
void AllProjectData::clear_project_msg() {
  if (GetArenaNoVirtual() == NULL && project_msg_ != NULL) delete project_msg_;
  project_msg_ = NULL;
}
const ::SOMS::ProjectMsg& AllProjectData::project_msg() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.project_msg)
  return project_msg_ != NULL ? *project_msg_
                         : *::SOMS::ProjectMsg::internal_default_instance();
}
::SOMS::ProjectMsg* AllProjectData::mutable_project_msg() {
  
  if (project_msg_ == NULL) {
    project_msg_ = new ::SOMS::ProjectMsg;
  }
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.project_msg)
  return project_msg_;
}
::SOMS::ProjectMsg* AllProjectData::release_project_msg() {
  // @@protoc_insertion_point(field_release:SOMS.AllProjectData.project_msg)
  
  ::SOMS::ProjectMsg* temp = project_msg_;
  project_msg_ = NULL;
  return temp;
}
void AllProjectData::set_allocated_project_msg(::SOMS::ProjectMsg* project_msg) {
  delete project_msg_;
  project_msg_ = project_msg;
  if (project_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SOMS.AllProjectData.project_msg)
}

// .SOMS.State project_statue = 2;
void AllProjectData::clear_project_statue() {
  project_statue_ = 0;
}
::SOMS::State AllProjectData::project_statue() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.project_statue)
  return static_cast< ::SOMS::State >(project_statue_);
}
void AllProjectData::set_project_statue(::SOMS::State value) {
  
  project_statue_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.project_statue)
}

// uint32 create_time = 3;
void AllProjectData::clear_create_time() {
  create_time_ = 0u;
}
::google::protobuf::uint32 AllProjectData::create_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.create_time)
  return create_time_;
}
void AllProjectData::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.create_time)
}

// uint32 real_begin_time = 4;
void AllProjectData::clear_real_begin_time() {
  real_begin_time_ = 0u;
}
::google::protobuf::uint32 AllProjectData::real_begin_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.real_begin_time)
  return real_begin_time_;
}
void AllProjectData::set_real_begin_time(::google::protobuf::uint32 value) {
  
  real_begin_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.real_begin_time)
}

// uint32 keep_time = 5;
void AllProjectData::clear_keep_time() {
  keep_time_ = 0u;
}
::google::protobuf::uint32 AllProjectData::keep_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.keep_time)
  return keep_time_;
}
void AllProjectData::set_keep_time(::google::protobuf::uint32 value) {
  
  keep_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.keep_time)
}

// uint32 rate_num = 6;
void AllProjectData::clear_rate_num() {
  rate_num_ = 0u;
}
::google::protobuf::uint32 AllProjectData::rate_num() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.rate_num)
  return rate_num_;
}
void AllProjectData::set_rate_num(::google::protobuf::uint32 value) {
  
  rate_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.rate_num)
}

// repeated .SOMS.RcvProgressMsg rcvprogress_msg = 7;
int AllProjectData::rcvprogress_msg_size() const {
  return rcvprogress_msg_.size();
}
void AllProjectData::clear_rcvprogress_msg() {
  rcvprogress_msg_.Clear();
}
const ::SOMS::RcvProgressMsg& AllProjectData::rcvprogress_msg(int index) const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Get(index);
}
::SOMS::RcvProgressMsg* AllProjectData::mutable_rcvprogress_msg(int index) {
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Mutable(index);
}
::SOMS::RcvProgressMsg* AllProjectData::add_rcvprogress_msg() {
  // @@protoc_insertion_point(field_add:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_.Add();
}
::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >*
AllProjectData::mutable_rcvprogress_msg() {
  // @@protoc_insertion_point(field_mutable_list:SOMS.AllProjectData.rcvprogress_msg)
  return &rcvprogress_msg_;
}
const ::google::protobuf::RepeatedPtrField< ::SOMS::RcvProgressMsg >&
AllProjectData::rcvprogress_msg() const {
  // @@protoc_insertion_point(field_list:SOMS.AllProjectData.rcvprogress_msg)
  return rcvprogress_msg_;
}

// .SOMS.FeasibleLevel level = 8;
void AllProjectData::clear_level() {
  level_ = 0;
}
::SOMS::FeasibleLevel AllProjectData::level() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.level)
  return static_cast< ::SOMS::FeasibleLevel >(level_);
}
void AllProjectData::set_level(::SOMS::FeasibleLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.level)
}

// string feasible_comment = 9;
void AllProjectData::clear_feasible_comment() {
  feasible_comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllProjectData::feasible_comment() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.feasible_comment)
  return feasible_comment_.GetNoArena();
}
void AllProjectData::set_feasible_comment(const ::std::string& value) {
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.feasible_comment)
}
#if LANG_CXX11
void AllProjectData::set_feasible_comment(::std::string&& value) {
  
  feasible_comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.AllProjectData.feasible_comment)
}
#endif
void AllProjectData::set_feasible_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.AllProjectData.feasible_comment)
}
void AllProjectData::set_feasible_comment(const char* value, size_t size) {
  
  feasible_comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.AllProjectData.feasible_comment)
}
::std::string* AllProjectData::mutable_feasible_comment() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.AllProjectData.feasible_comment)
  return feasible_comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllProjectData::release_feasible_comment() {
  // @@protoc_insertion_point(field_release:SOMS.AllProjectData.feasible_comment)
  
  return feasible_comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllProjectData::set_allocated_feasible_comment(::std::string* feasible_comment) {
  if (feasible_comment != NULL) {
    
  } else {
    
  }
  feasible_comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feasible_comment);
  // @@protoc_insertion_point(field_set_allocated:SOMS.AllProjectData.feasible_comment)
}

// uint32 tlj_station_num = 10;
void AllProjectData::clear_tlj_station_num() {
  tlj_station_num_ = 0u;
}
::google::protobuf::uint32 AllProjectData::tlj_station_num() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.tlj_station_num)
  return tlj_station_num_;
}
void AllProjectData::set_tlj_station_num(::google::protobuf::uint32 value) {
  
  tlj_station_num_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.tlj_station_num)
}

// uint32 real_end_time = 11;
void AllProjectData::clear_real_end_time() {
  real_end_time_ = 0u;
}
::google::protobuf::uint32 AllProjectData::real_end_time() const {
  // @@protoc_insertion_point(field_get:SOMS.AllProjectData.real_end_time)
  return real_end_time_;
}
void AllProjectData::set_real_end_time(::google::protobuf::uint32 value) {
  
  real_end_time_ = value;
  // @@protoc_insertion_point(field_set:SOMS.AllProjectData.real_end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainList::kTrainIdFieldNumber;
const int TrainList::kTrainNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainList::TrainList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.TrainList)
}
TrainList::TrainList(const TrainList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  train_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.train_number().size() > 0) {
    train_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.train_number_);
  }
  train_id_ = from.train_id_;
  // @@protoc_insertion_point(copy_constructor:SOMS.TrainList)
}

void TrainList::SharedCtor() {
  train_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  train_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TrainList::~TrainList() {
  // @@protoc_insertion_point(destructor:SOMS.TrainList)
  SharedDtor();
}

void TrainList::SharedDtor() {
  train_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrainList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainList::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrainList& TrainList::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrainList* TrainList::New(::google::protobuf::Arena* arena) const {
  TrainList* n = new TrainList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainList::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.TrainList)
  train_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  train_id_ = GOOGLE_ULONGLONG(0);
}

bool TrainList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.TrainList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 train_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &train_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string train_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_train_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->train_number().data(), this->train_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.TrainList.train_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.TrainList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.TrainList)
  return false;
#undef DO_
}

void TrainList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.TrainList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 train_id = 1;
  if (this->train_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->train_id(), output);
  }

  // string train_number = 2;
  if (this->train_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_number().data(), this->train_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.TrainList.train_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->train_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.TrainList)
}

::google::protobuf::uint8* TrainList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.TrainList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 train_id = 1;
  if (this->train_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->train_id(), target);
  }

  // string train_number = 2;
  if (this->train_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_number().data(), this->train_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.TrainList.train_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->train_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.TrainList)
  return target;
}

size_t TrainList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.TrainList)
  size_t total_size = 0;

  // string train_number = 2;
  if (this->train_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->train_number());
  }

  // uint64 train_id = 1;
  if (this->train_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->train_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.TrainList)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.TrainList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.TrainList)
    MergeFrom(*source);
  }
}

void TrainList::MergeFrom(const TrainList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.TrainList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.train_number().size() > 0) {

    train_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.train_number_);
  }
  if (from.train_id() != 0) {
    set_train_id(from.train_id());
  }
}

void TrainList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.TrainList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainList::CopyFrom(const TrainList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.TrainList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainList::IsInitialized() const {
  return true;
}

void TrainList::Swap(TrainList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainList::InternalSwap(TrainList* other) {
  train_number_.Swap(&other->train_number_);
  std::swap(train_id_, other->train_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainList::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainList

// uint64 train_id = 1;
void TrainList::clear_train_id() {
  train_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrainList::train_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrainList.train_id)
  return train_id_;
}
void TrainList::set_train_id(::google::protobuf::uint64 value) {
  
  train_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrainList.train_id)
}

// string train_number = 2;
void TrainList::clear_train_number() {
  train_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrainList::train_number() const {
  // @@protoc_insertion_point(field_get:SOMS.TrainList.train_number)
  return train_number_.GetNoArena();
}
void TrainList::set_train_number(const ::std::string& value) {
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.TrainList.train_number)
}
#if LANG_CXX11
void TrainList::set_train_number(::std::string&& value) {
  
  train_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.TrainList.train_number)
}
#endif
void TrainList::set_train_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.TrainList.train_number)
}
void TrainList::set_train_number(const char* value, size_t size) {
  
  train_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.TrainList.train_number)
}
::std::string* TrainList::mutable_train_number() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.TrainList.train_number)
  return train_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrainList::release_train_number() {
  // @@protoc_insertion_point(field_release:SOMS.TrainList.train_number)
  
  return train_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrainList::set_allocated_train_number(::std::string* train_number) {
  if (train_number != NULL) {
    
  } else {
    
  }
  train_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), train_number);
  // @@protoc_insertion_point(field_set_allocated:SOMS.TrainList.train_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DispatcherList::kDispatcherIdFieldNumber;
const int DispatcherList::kDispatcherNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DispatcherList::DispatcherList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.DispatcherList)
}
DispatcherList::DispatcherList(const DispatcherList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dispatcher_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dispatcher_number().size() > 0) {
    dispatcher_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_number_);
  }
  dispatcher_id_ = from.dispatcher_id_;
  // @@protoc_insertion_point(copy_constructor:SOMS.DispatcherList)
}

void DispatcherList::SharedCtor() {
  dispatcher_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DispatcherList::~DispatcherList() {
  // @@protoc_insertion_point(destructor:SOMS.DispatcherList)
  SharedDtor();
}

void DispatcherList::SharedDtor() {
  dispatcher_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DispatcherList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DispatcherList::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DispatcherList& DispatcherList::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

DispatcherList* DispatcherList::New(::google::protobuf::Arena* arena) const {
  DispatcherList* n = new DispatcherList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DispatcherList::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.DispatcherList)
  dispatcher_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_id_ = GOOGLE_ULONGLONG(0);
}

bool DispatcherList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.DispatcherList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dispatcher_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dispatcher_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dispatcher_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispatcher_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dispatcher_number().data(), this->dispatcher_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.DispatcherList.dispatcher_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.DispatcherList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.DispatcherList)
  return false;
#undef DO_
}

void DispatcherList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.DispatcherList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dispatcher_id = 1;
  if (this->dispatcher_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dispatcher_id(), output);
  }

  // string dispatcher_number = 2;
  if (this->dispatcher_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_number().data(), this->dispatcher_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.DispatcherList.dispatcher_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dispatcher_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.DispatcherList)
}

::google::protobuf::uint8* DispatcherList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.DispatcherList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dispatcher_id = 1;
  if (this->dispatcher_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dispatcher_id(), target);
  }

  // string dispatcher_number = 2;
  if (this->dispatcher_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_number().data(), this->dispatcher_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.DispatcherList.dispatcher_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dispatcher_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.DispatcherList)
  return target;
}

size_t DispatcherList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.DispatcherList)
  size_t total_size = 0;

  // string dispatcher_number = 2;
  if (this->dispatcher_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dispatcher_number());
  }

  // uint64 dispatcher_id = 1;
  if (this->dispatcher_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dispatcher_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DispatcherList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.DispatcherList)
  GOOGLE_DCHECK_NE(&from, this);
  const DispatcherList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DispatcherList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.DispatcherList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.DispatcherList)
    MergeFrom(*source);
  }
}

void DispatcherList::MergeFrom(const DispatcherList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.DispatcherList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dispatcher_number().size() > 0) {

    dispatcher_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_number_);
  }
  if (from.dispatcher_id() != 0) {
    set_dispatcher_id(from.dispatcher_id());
  }
}

void DispatcherList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.DispatcherList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DispatcherList::CopyFrom(const DispatcherList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.DispatcherList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DispatcherList::IsInitialized() const {
  return true;
}

void DispatcherList::Swap(DispatcherList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DispatcherList::InternalSwap(DispatcherList* other) {
  dispatcher_number_.Swap(&other->dispatcher_number_);
  std::swap(dispatcher_id_, other->dispatcher_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DispatcherList::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DispatcherList

// uint64 dispatcher_id = 1;
void DispatcherList::clear_dispatcher_id() {
  dispatcher_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DispatcherList::dispatcher_id() const {
  // @@protoc_insertion_point(field_get:SOMS.DispatcherList.dispatcher_id)
  return dispatcher_id_;
}
void DispatcherList::set_dispatcher_id(::google::protobuf::uint64 value) {
  
  dispatcher_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.DispatcherList.dispatcher_id)
}

// string dispatcher_number = 2;
void DispatcherList::clear_dispatcher_number() {
  dispatcher_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DispatcherList::dispatcher_number() const {
  // @@protoc_insertion_point(field_get:SOMS.DispatcherList.dispatcher_number)
  return dispatcher_number_.GetNoArena();
}
void DispatcherList::set_dispatcher_number(const ::std::string& value) {
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.DispatcherList.dispatcher_number)
}
#if LANG_CXX11
void DispatcherList::set_dispatcher_number(::std::string&& value) {
  
  dispatcher_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.DispatcherList.dispatcher_number)
}
#endif
void DispatcherList::set_dispatcher_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.DispatcherList.dispatcher_number)
}
void DispatcherList::set_dispatcher_number(const char* value, size_t size) {
  
  dispatcher_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.DispatcherList.dispatcher_number)
}
::std::string* DispatcherList::mutable_dispatcher_number() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.DispatcherList.dispatcher_number)
  return dispatcher_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DispatcherList::release_dispatcher_number() {
  // @@protoc_insertion_point(field_release:SOMS.DispatcherList.dispatcher_number)
  
  return dispatcher_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DispatcherList::set_allocated_dispatcher_number(::std::string* dispatcher_number) {
  if (dispatcher_number != NULL) {
    
  } else {
    
  }
  dispatcher_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_number);
  // @@protoc_insertion_point(field_set_allocated:SOMS.DispatcherList.dispatcher_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMsg::kGroupIdFieldNumber;
const int GroupMsg::kGroupNameFieldNumber;
const int GroupMsg::kDispatcherLeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMsg::GroupMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.GroupMsg)
}
GroupMsg::GroupMsg(const GroupMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  dispatcher_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dispatcher_leader().size() > 0) {
    dispatcher_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_leader_);
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:SOMS.GroupMsg)
}

void GroupMsg::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_leader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GroupMsg::~GroupMsg() {
  // @@protoc_insertion_point(destructor:SOMS.GroupMsg)
  SharedDtor();
}

void GroupMsg::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_leader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMsg::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupMsg& GroupMsg::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupMsg* GroupMsg::New(::google::protobuf::Arena* arena) const {
  GroupMsg* n = new GroupMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.GroupMsg)
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatcher_leader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = GOOGLE_ULONGLONG(0);
}

bool GroupMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.GroupMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), this->group_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.GroupMsg.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dispatcher_leader = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispatcher_leader()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dispatcher_leader().data(), this->dispatcher_leader().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.GroupMsg.dispatcher_leader"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.GroupMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.GroupMsg)
  return false;
#undef DO_
}

void GroupMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.GroupMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->group_id(), output);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.GroupMsg.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_name(), output);
  }

  // string dispatcher_leader = 3;
  if (this->dispatcher_leader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_leader().data(), this->dispatcher_leader().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.GroupMsg.dispatcher_leader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dispatcher_leader(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.GroupMsg)
}

::google::protobuf::uint8* GroupMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.GroupMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->group_id(), target);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.GroupMsg.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_name(), target);
  }

  // string dispatcher_leader = 3;
  if (this->dispatcher_leader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatcher_leader().data(), this->dispatcher_leader().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.GroupMsg.dispatcher_leader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dispatcher_leader(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.GroupMsg)
  return target;
}

size_t GroupMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.GroupMsg)
  size_t total_size = 0;

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string dispatcher_leader = 3;
  if (this->dispatcher_leader().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dispatcher_leader());
  }

  // uint64 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.GroupMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.GroupMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.GroupMsg)
    MergeFrom(*source);
  }
}

void GroupMsg::MergeFrom(const GroupMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.GroupMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.dispatcher_leader().size() > 0) {

    dispatcher_leader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatcher_leader_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void GroupMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.GroupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupMsg::CopyFrom(const GroupMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.GroupMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMsg::IsInitialized() const {
  return true;
}

void GroupMsg::Swap(GroupMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMsg::InternalSwap(GroupMsg* other) {
  group_name_.Swap(&other->group_name_);
  dispatcher_leader_.Swap(&other->dispatcher_leader_);
  std::swap(group_id_, other->group_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupMsg::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupMsg

// uint64 group_id = 1;
void GroupMsg::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GroupMsg::group_id() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.group_id)
  return group_id_;
}
void GroupMsg::set_group_id(::google::protobuf::uint64 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.group_id)
}

// string group_name = 2;
void GroupMsg::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupMsg::group_name() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.group_name)
  return group_name_.GetNoArena();
}
void GroupMsg::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.group_name)
}
#if LANG_CXX11
void GroupMsg::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.GroupMsg.group_name)
}
#endif
void GroupMsg::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.GroupMsg.group_name)
}
void GroupMsg::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.GroupMsg.group_name)
}
::std::string* GroupMsg::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.GroupMsg.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupMsg::release_group_name() {
  // @@protoc_insertion_point(field_release:SOMS.GroupMsg.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupMsg::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.GroupMsg.group_name)
}

// string dispatcher_leader = 3;
void GroupMsg::clear_dispatcher_leader() {
  dispatcher_leader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupMsg::dispatcher_leader() const {
  // @@protoc_insertion_point(field_get:SOMS.GroupMsg.dispatcher_leader)
  return dispatcher_leader_.GetNoArena();
}
void GroupMsg::set_dispatcher_leader(const ::std::string& value) {
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.GroupMsg.dispatcher_leader)
}
#if LANG_CXX11
void GroupMsg::set_dispatcher_leader(::std::string&& value) {
  
  dispatcher_leader_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.GroupMsg.dispatcher_leader)
}
#endif
void GroupMsg::set_dispatcher_leader(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.GroupMsg.dispatcher_leader)
}
void GroupMsg::set_dispatcher_leader(const char* value, size_t size) {
  
  dispatcher_leader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.GroupMsg.dispatcher_leader)
}
::std::string* GroupMsg::mutable_dispatcher_leader() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.GroupMsg.dispatcher_leader)
  return dispatcher_leader_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupMsg::release_dispatcher_leader() {
  // @@protoc_insertion_point(field_release:SOMS.GroupMsg.dispatcher_leader)
  
  return dispatcher_leader_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupMsg::set_allocated_dispatcher_leader(::std::string* dispatcher_leader) {
  if (dispatcher_leader != NULL) {
    
  } else {
    
  }
  dispatcher_leader_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatcher_leader);
  // @@protoc_insertion_point(field_set_allocated:SOMS.GroupMsg.dispatcher_leader)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackMsg::kTrackIdFieldNumber;
const int TrackMsg::kTrackNameFieldNumber;
const int TrackMsg::kNearIdFieldNumber;
const int TrackMsg::kNearEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackMsg::TrackMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicType_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SOMS.TrackMsg)
}
TrackMsg::TrackMsg(const TrackMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  track_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.track_name().size() > 0) {
    track_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_name_);
  }
  ::memcpy(&track_id_, &from.track_id_,
    reinterpret_cast<char*>(&near_end_) -
    reinterpret_cast<char*>(&track_id_) + sizeof(near_end_));
  // @@protoc_insertion_point(copy_constructor:SOMS.TrackMsg)
}

void TrackMsg::SharedCtor() {
  track_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&track_id_, 0, reinterpret_cast<char*>(&near_end_) -
    reinterpret_cast<char*>(&track_id_) + sizeof(near_end_));
  _cached_size_ = 0;
}

TrackMsg::~TrackMsg() {
  // @@protoc_insertion_point(destructor:SOMS.TrackMsg)
  SharedDtor();
}

void TrackMsg::SharedDtor() {
  track_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackMsg::descriptor() {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackMsg& TrackMsg::default_instance() {
  protobuf_PublicType_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrackMsg* TrackMsg::New(::google::protobuf::Arena* arena) const {
  TrackMsg* n = new TrackMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrackMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SOMS.TrackMsg)
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&track_id_, 0, reinterpret_cast<char*>(&near_end_) -
    reinterpret_cast<char*>(&track_id_) + sizeof(near_end_));
}

bool TrackMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SOMS.TrackMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 track_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string track_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_track_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->track_name().data(), this->track_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SOMS.TrackMsg.track_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 near_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &near_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 near_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &near_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SOMS.TrackMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SOMS.TrackMsg)
  return false;
#undef DO_
}

void TrackMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SOMS.TrackMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 track_id = 1;
  if (this->track_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->track_id(), output);
  }

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track_name().data(), this->track_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.TrackMsg.track_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->track_name(), output);
  }

  // uint64 near_id = 3;
  if (this->near_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->near_id(), output);
  }

  // uint32 near_end = 4;
  if (this->near_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->near_end(), output);
  }

  // @@protoc_insertion_point(serialize_end:SOMS.TrackMsg)
}

::google::protobuf::uint8* TrackMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SOMS.TrackMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 track_id = 1;
  if (this->track_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->track_id(), target);
  }

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->track_name().data(), this->track_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SOMS.TrackMsg.track_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->track_name(), target);
  }

  // uint64 near_id = 3;
  if (this->near_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->near_id(), target);
  }

  // uint32 near_end = 4;
  if (this->near_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->near_end(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SOMS.TrackMsg)
  return target;
}

size_t TrackMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SOMS.TrackMsg)
  size_t total_size = 0;

  // string track_name = 2;
  if (this->track_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->track_name());
  }

  // uint64 track_id = 1;
  if (this->track_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id());
  }

  // uint64 near_id = 3;
  if (this->near_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->near_id());
  }

  // uint32 near_end = 4;
  if (this->near_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->near_end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SOMS.TrackMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SOMS.TrackMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SOMS.TrackMsg)
    MergeFrom(*source);
  }
}

void TrackMsg::MergeFrom(const TrackMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SOMS.TrackMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.track_name().size() > 0) {

    track_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.track_name_);
  }
  if (from.track_id() != 0) {
    set_track_id(from.track_id());
  }
  if (from.near_id() != 0) {
    set_near_id(from.near_id());
  }
  if (from.near_end() != 0) {
    set_near_end(from.near_end());
  }
}

void TrackMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SOMS.TrackMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackMsg::CopyFrom(const TrackMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SOMS.TrackMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackMsg::IsInitialized() const {
  return true;
}

void TrackMsg::Swap(TrackMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackMsg::InternalSwap(TrackMsg* other) {
  track_name_.Swap(&other->track_name_);
  std::swap(track_id_, other->track_id_);
  std::swap(near_id_, other->near_id_);
  std::swap(near_end_, other->near_end_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrackMsg::GetMetadata() const {
  protobuf_PublicType_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicType_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrackMsg

// uint64 track_id = 1;
void TrackMsg::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrackMsg::track_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.track_id)
  return track_id_;
}
void TrackMsg::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.track_id)
}

// string track_name = 2;
void TrackMsg::clear_track_name() {
  track_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TrackMsg::track_name() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.track_name)
  return track_name_.GetNoArena();
}
void TrackMsg::set_track_name(const ::std::string& value) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.track_name)
}
#if LANG_CXX11
void TrackMsg::set_track_name(::std::string&& value) {
  
  track_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SOMS.TrackMsg.track_name)
}
#endif
void TrackMsg::set_track_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SOMS.TrackMsg.track_name)
}
void TrackMsg::set_track_name(const char* value, size_t size) {
  
  track_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SOMS.TrackMsg.track_name)
}
::std::string* TrackMsg::mutable_track_name() {
  
  // @@protoc_insertion_point(field_mutable:SOMS.TrackMsg.track_name)
  return track_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TrackMsg::release_track_name() {
  // @@protoc_insertion_point(field_release:SOMS.TrackMsg.track_name)
  
  return track_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TrackMsg::set_allocated_track_name(::std::string* track_name) {
  if (track_name != NULL) {
    
  } else {
    
  }
  track_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), track_name);
  // @@protoc_insertion_point(field_set_allocated:SOMS.TrackMsg.track_name)
}

// uint64 near_id = 3;
void TrackMsg::clear_near_id() {
  near_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TrackMsg::near_id() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.near_id)
  return near_id_;
}
void TrackMsg::set_near_id(::google::protobuf::uint64 value) {
  
  near_id_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.near_id)
}

// uint32 near_end = 4;
void TrackMsg::clear_near_end() {
  near_end_ = 0u;
}
::google::protobuf::uint32 TrackMsg::near_end() const {
  // @@protoc_insertion_point(field_get:SOMS.TrackMsg.near_end)
  return near_end_;
}
void TrackMsg::set_near_end(::google::protobuf::uint32 value) {
  
  near_end_ = value;
  // @@protoc_insertion_point(field_set:SOMS.TrackMsg.near_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace SOMS

// @@protoc_insertion_point(global_scope)
